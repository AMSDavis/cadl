http:
  headers:
    - $key: ErrorCode
      description: -- test -- The error code.
      schema:
        &a2
        type: int64
        versionInfo:
          - added: 1.1.0
      versionInfo:
        - added: 1.1.0
    - $key: ErrorMessage
      description: -- test -- The error message.
      schema:
        &a27
        target:
          &a1
          type: string
          versionInfo:
            - added: 1.1.0
        versionInfo:
          - added: 1.1.0
      versionInfo:
        - added: 1.1.0
    - $key: Link
      description: -- test -- Links to related resources, in the format defined by
        [RFC 5988](https://tools.ietf.org/html/rfc5988#section-5). This will
        potentially include a link with relation type `next`, `first`, and
        `current`, where appropiate.
      schema: *a1
      versionInfo:
        - added: 1.1.0
    - $key: ServerId
      description: -- test -- The ID for the server communicated with.
      schema:
        target: *a1
        versionInfo:
          - added: 1.1.0
      versionInfo:
        - added: 1.1.0
metaData:
  name: Ably
  contacts:
    - name: Ably Support
      email: support@ably.io
      role: author
      url: https://www.ably.io/contact
      versionInfo:
        - added: 1.1.0
      attic:
        x-twitter: ablyrealtime
  description: The [REST API
    specification](https://www.ably.io/documentation/rest-api) for Ably.
  versionInfo:
    - added: 1.1.0
  attic:
    x-apisguru-categories:
      - cloud
    x-logo:
      url: https://twitter.com/ablyrealtime/profile_image?size=original
    x-origin:
      - converter:
          url: https://github.com/lucybot/api-spec-converter
          version: 2.7.25
        format: openapi
        url: https://raw.githubusercontent.com/ably/open-specs/master/swagger.yaml
        version: "3.0"
    x-providerName: ably.io
schemas:
  primitives:
    - *a1
    - &a3
      type: boolean
      versionInfo:
        - added: 1.1.0
    - *a2
    - type: any
      versionInfo:
        - added: 1.1.0
  enums:
    - &a7
      type: *a1
      sealed: false
      values:
        - type: *a1
          value: phone
        - type: *a1
          value: tablet
        - type: *a1
          value: desktop
        - type: *a1
          value: tv
        - type: *a1
          value: watch
        - type: *a1
          value: car
        - type: *a1
          value: embedded
      versionInfo:
        - added: 1.1.0
    - &a9
      type: *a1
      sealed: false
      values:
        - type: *a1
          value: ios
        - type: *a1
          value: android
      versionInfo:
        - added: 1.1.0
    - &a6
      type: *a1
      sealed: false
      values:
        - type: *a1
          value: apns
        - type: *a1
          value: fcm
        - type: *a1
          value: gcm
      versionInfo:
        - added: 1.1.0
    - &a11
      type: *a1
      sealed: false
      values:
        - type: *a1
          value: Active
        - type: *a1
          value: Failing
        - type: *a1
          value: Failed
      versionInfo:
        - added: 1.1.0
    - &a18
      type: *a1
      sealed: false
      values:
        - type: *a1
          value: ABSENT
        - type: *a1
          value: PRESENT
        - type: *a1
          value: ENTER
        - type: *a1
          value: LEAVE
        - type: *a1
          value: UPDATE
      versionInfo:
        - added: 1.1.0
  objects:
    - &a4
      $key: Occupancy
      description: An Occupancy instance indicating the occupancy of a channel. For
        events indicating regional activity of a channel this indicates activity
        in that region, not global activity.
      properties:
        - name: presenceConnections
          schema:
            &a20
            target: *a2
            versionInfo:
              - added: 1.1.0
        - name: presenceMembers
          schema:
            target: *a2
            versionInfo:
              - added: 1.1.0
        - name: presenceSubscribers
          schema:
            target: *a2
            versionInfo:
              - added: 1.1.0
        - name: publishers
          schema:
            target: *a2
            versionInfo:
              - added: 1.1.0
        - name: subscribers
          schema:
            target: *a2
            versionInfo:
              - added: 1.1.0
      versionInfo:
        - added: 1.1.0
    - &a5
      $key: ChannelStatus
      description: A ChannelStatus instance.
      properties:
        - name: isActive
          required: true
          schema: *a3
        - name: occupancy
          schema:
            &a21
            target: *a4
            versionInfo:
              - added: 1.1.0
      versionInfo:
        - added: 1.1.0
    - $key: ChannelDetails
      properties:
        - name: channelId
          required: true
          schema: *a1
        - name: isGlobalMaster
          schema: *a3
        - name: region
          schema: *a1
        - name: status
          schema:
            &a22
            target: *a5
            versionInfo:
              - added: 1.1.0
      versionInfo:
        - added: 1.1.0
    - &a8
      $key: metadata
      description: Optional metadata object for this device. The metadata for a device
        may only be set by clients with push-admin privileges and will be used
        more extensively in the future with smart notifications.
      versionInfo:
        - added: 1.1.0
    - &a10
      $key: Recipient
      description: Push recipient details for a device.
      properties:
        - name: clientId
          schema: *a1
        - name: deviceId
          schema: *a1
        - name: deviceToken
          schema: *a1
        - name: registrationToken
          schema: *a1
        - name: transportType
          schema: *a6
      versionInfo:
        - added: 1.1.0
    - $key: DeviceDetails
      properties:
        - name: clientId
          schema: *a1
        - name: deviceSecret
          schema: *a1
        - name: formFactor
          schema: *a7
        - name: id
          schema: *a1
        - name: metadata
          schema: *a8
        - name: platform
          schema: *a9
        - name: push.recipient
          schema:
            &a23
            target: *a10
            versionInfo:
              - added: 1.1.0
        - name: push.state
          schema: *a11
      versionInfo:
        - added: 1.1.0
    - $key: Error
      description: Returned error from failed REST.
      properties:
        - name: code
          schema:
            target: *a2
            versionInfo:
              - added: 1.1.0
        - name: href
          schema: *a1
        - name: message
          schema: *a1
        - name: serverId
          schema: *a1
        - name: statusCode
          schema:
            target: *a2
            versionInfo:
              - added: 1.1.0
      versionInfo:
        - added: 1.1.0
    - &a12
      $key: Notification
      properties:
        - name: body
          schema: *a1
        - name: collapseKey
          schema: *a1
        - name: icon
          schema: *a1
        - name: sound
          schema: *a1
        - name: title
          schema: *a1
      versionInfo:
        - added: 1.1.0
    - &a13
      $key: apns
      description: Extends and overrides generic values when delivering via APNs. [See
        examples](https://www.ably.io/documentation/general/push/publish#payload-structure)
      properties:
        - name: notification
          schema:
            &a24
            target: *a12
            versionInfo:
              - added: 1.1.0
      versionInfo:
        - added: 1.1.0
    - &a14
      $key: fcm
      description: Extends and overrides generic values when delivering via GCM/FCM.
        [See
        examples](https://www.ably.io/documentation/general/push/publish#payload-structure)
      properties:
        - name: notification
          schema:
            target: *a12
            versionInfo:
              - added: 1.1.0
      versionInfo:
        - added: 1.1.0
    - &a15
      $key: web
      description: Extends and overrides generic values when delivering via web. [See
        examples](https://www.ably.io/documentation/general/push/publish#payload-structure)
      properties:
        - name: notification
          schema:
            target: *a12
            versionInfo:
              - added: 1.1.0
      versionInfo:
        - added: 1.1.0
    - &a16
      $key: Push
      properties:
        - name: apns
          schema: *a13
        - name: data
          schema: *a1
        - name: fcm
          schema: *a14
        - name: notification
          schema:
            target: *a12
            versionInfo:
              - added: 1.1.0
        - name: web
          schema: *a15
      versionInfo:
        - added: 1.1.0
    - &a17
      $key: Extras
      description: Extras object. Currently only allows for
        [push](https://www.ably.io/documentation/general/push/publish#channel-broadcast-example)
        extra.
      properties:
        - name: push
          schema:
            &a25
            target: *a16
            versionInfo:
              - added: 1.1.0
      versionInfo:
        - added: 1.1.0
    - $key: Message
      description: Message object.
      properties:
        - name: clientId
          schema: *a1
        - name: connectionId
          schema: *a1
        - name: data
          schema: *a1
        - name: encoding
          schema: *a1
        - name: extras
          schema:
            &a26
            target: *a17
            versionInfo:
              - added: 1.1.0
        - name: id
          schema: *a1
        - name: name
          schema: *a1
        - name: timestamp
          schema:
            target: *a2
            versionInfo:
              - added: 1.1.0
      versionInfo:
        - added: 1.1.0
    - $key: PresenceMessage
      properties:
        - name: action
          schema: *a18
        - name: clientId
          schema: *a1
        - name: connectionId
          schema: *a1
        - name: data
          schema: *a1
        - name: encoding
          schema: *a1
        - name: extras
          schema:
            target: *a17
            versionInfo:
              - added: 1.1.0
        - name: id
          schema: *a1
        - name: timestamp
          schema:
            target: *a2
            versionInfo:
              - added: 1.1.0
      versionInfo:
        - added: 1.1.0
    - $key: TokenDetails
      properties:
        - name: capability
          schema: *a1
        - name: expires
          schema:
            target: *a2
            versionInfo:
              - added: 1.1.0
        - name: issued
          schema:
            target: *a2
            versionInfo:
              - added: 1.1.0
        - name: keyName
          schema: *a1
        - name: token
          schema: *a1
      versionInfo:
        - added: 1.1.0
    - &a19
      $key: capability
      description: The
        [capabilities](https://www.ably.io/documentation/core-features/authentication#capabilities-explained)
        (i.e. a set of channel names/namespaces and, for each, a set of
        operations) which should be a subset of the set of capabilities
        associated with the key specified in keyName.
      versionInfo:
        - added: 1.1.0
    - $key: TokenRequest
      properties:
        - name: capability
          required: true
          schema: *a19
        - name: clientId
          schema: *a1
        - name: keyName
          required: true
          schema: *a1
        - name: nonce
          required: true
          schema: *a1
        - name: timestamp
          required: true
          schema:
            target: *a2
            versionInfo:
              - added: 1.1.0
      versionInfo:
        - added: 1.1.0
  aliases:
    - *a20
    - *a21
    - *a22
    - *a23
    - *a24
    - *a25
    - *a26
    - *a27
attic:
  servers:
    - url: https://rest.ably.io
  info:
    x-apisguru-categories:
      - cloud
    x-logo:
      url: https://twitter.com/ablyrealtime/profile_image?size=original
    x-origin:
      - converter:
          url: https://github.com/lucybot/api-spec-converter
          version: 2.7.25
        format: openapi
        url: https://raw.githubusercontent.com/ably/open-specs/master/swagger.yaml
        version: "3.0"
  security:
    - basicAuth: []
    - bearerAuth: []
  paths:
    /channels:
      get:
        description: Enumerate all active channels of the application
        operationId: getMetadataOfAllChannels
        parameters:
          - in: query
            name: limit
            schema:
              default: 100
              type: integer
          - description: Optionally limits the query to only those channels whose name
              starts with the given prefix
            in: query
            name: prefix
            schema:
              type: string
          - description: optionally specifies whether to return just channel names (by=id)
              or ChannelDetails (by=value)
            in: query
            name: by
            schema:
              enum:
                - value
                - id
              type: string
        responses:
          2XX:
            content:
              application/json:
                schema:
                  oneOf:
                    - items:
                        $ref: "#/components/schemas/ChannelDetails"
                      type: array
                    - items:
                        type: string
                      type: array
              application/x-msgpack:
                schema:
                  oneOf:
                    - items:
                        $ref: "#/components/schemas/ChannelDetails"
                      type: array
                    - items:
                        type: string
                      type: array
              text/html:
                schema:
                  type: string
            description: OK
            headers:
              link:
                $ref: "#/components/headers/Link"
          default:
            $ref: "#/components/responses/Error"
        summary: Enumerate all active channels of the application
        tags:
          - Status
      parameters:
        - $ref: "#/components/parameters/versionHeader"
        - $ref: "#/components/parameters/responseFormat"
    "/channels/{channel_id}":
      get:
        description: Get metadata of a channel
        operationId: getMetadataOfChannel
        parameters:
          - $ref: "#/components/parameters/channelId"
        responses:
          "200":
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ChannelDetails"
            description: OK
            headers:
              x-ably-serverid:
                $ref: "#/components/headers/ServerId"
          default:
            $ref: "#/components/responses/Error"
        summary: Get metadata of a channel
        tags:
          - Status
      parameters:
        - $ref: "#/components/parameters/versionHeader"
        - $ref: "#/components/parameters/responseFormat"
    "/channels/{channel_id}/messages":
      get:
        description: Get message history for a channel
        operationId: getMessagesByChannel
        parameters:
          - $ref: "#/components/parameters/channelId"
          - $ref: "#/components/parameters/filterStart"
          - $ref: "#/components/parameters/filterLimit"
          - $ref: "#/components/parameters/filterEnd"
          - $ref: "#/components/parameters/filterDirection"
        responses:
          2XX:
            content:
              application/json:
                schema:
                  items:
                    $ref: "#/components/schemas/Message"
                  type: array
              application/x-msgpack:
                schema:
                  items:
                    $ref: "#/components/schemas/Message"
                  type: array
              text/html:
                schema:
                  type: string
            description: OK
            headers:
              link:
                $ref: "#/components/headers/Link"
              x-ably-serverid:
                $ref: "#/components/headers/ServerId"
          default:
            description: Error
            headers:
              x-ably-errorcode:
                $ref: "#/components/headers/ErrorCode"
              x-ably-errormessage:
                $ref: "#/components/headers/ErrorMessage"
              x-ably-serverid:
                $ref: "#/components/headers/ServerId"
        summary: Get message history for a channel
        tags:
          - History
      parameters:
        - $ref: "#/components/parameters/versionHeader"
        - $ref: "#/components/parameters/responseFormat"
      post:
        description: Publish a message to the specified channel
        operationId: publishMessagesToChannel
        parameters:
          - $ref: "#/components/parameters/channelId"
        requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
            application/x-msgpack:
              schema:
                $ref: "#/components/schemas/Message"
            application/x-www-form-urlencoded:
              schema:
                $ref: "#/components/schemas/Message"
        responses:
          2XX:
            content:
              application/json:
                schema:
                  properties:
                    channel:
                      type: string
                    messageId:
                      type: string
                  type: object
              application/x-msgpack:
                schema:
                  properties:
                    channel:
                      type: string
                    messageId:
                      type: string
                  type: object
              text/html:
                schema:
                  properties:
                    channel:
                      type: string
                    messageId:
                      type: string
                  type: object
            description: OK
            headers:
              x-ably-serverid:
                $ref: "#/components/headers/ServerId"
          default:
            $ref: "#/components/responses/Error"
        summary: Publish a message to a channel
        tags:
          - Publishing
    "/channels/{channel_id}/presence":
      get:
        description: Get presence on a channel
        operationId: getPresenceOfChannel
        parameters:
          - $ref: "#/components/parameters/channelId"
          - in: query
            name: clientId
            schema:
              type: string
          - in: query
            name: connectionId
            schema:
              type: string
          - in: query
            name: limit
            schema:
              default: 100
              type: integer
        responses:
          "200":
            content:
              application/json:
                schema:
                  items:
                    $ref: "#/components/schemas/PresenceMessage"
                  type: array
              application/x-msgpack:
                schema:
                  items:
                    $ref: "#/components/schemas/PresenceMessage"
                  type: array
              text/html:
                schema:
                  type: string
            description: OK
            headers:
              link:
                $ref: "#/components/headers/Link"
              x-ably-serverid:
                $ref: "#/components/headers/ServerId"
          default:
            $ref: "#/components/responses/Error"
        summary: Get presence of a channel
        tags:
          - Status
      parameters:
        - $ref: "#/components/parameters/versionHeader"
        - $ref: "#/components/parameters/responseFormat"
    "/channels/{channel_id}/presence/history":
      get:
        description: Get presence on a channel
        operationId: getPresenceHistoryOfChannel
        parameters:
          - $ref: "#/components/parameters/channelId"
          - $ref: "#/components/parameters/filterStart"
          - $ref: "#/components/parameters/filterLimit"
          - $ref: "#/components/parameters/filterEnd"
          - $ref: "#/components/parameters/filterDirection"
        responses:
          2XX:
            content:
              application/json:
                schema:
                  items:
                    $ref: "#/components/schemas/PresenceMessage"
                  type: array
              application/x-msgpack:
                schema:
                  items:
                    $ref: "#/components/schemas/PresenceMessage"
                  type: array
              text/html:
                schema:
                  type: string
            description: OK
            headers:
              link:
                $ref: "#/components/headers/Link"
          default:
            $ref: "#/components/responses/Error"
        summary: Get presence history of a channel
        tags:
          - History
      parameters:
        - $ref: "#/components/parameters/versionHeader"
        - $ref: "#/components/parameters/responseFormat"
    "/keys/{keyName}/requestToken":
      parameters:
        - $ref: "#/components/parameters/versionHeader"
        - $ref: "#/components/parameters/responseFormat"
      post:
        description: This is the means by which clients obtain access tokens to use the
          service. You can see how to construct an Ably TokenRequest in the
          [Ably TokenRequest
          spec](https://www.ably.io/documentation/rest-api/token-request-spec)
          documentation, although we recommend you use an Ably SDK rather to
          create a TokenRequest, as the construction of a TokenRequest is
          complex. The resulting token response object contains the token
          properties as defined in Ably TokenRequest spec. Authentication is not
          required if using a Signed TokenRequest.
        operationId: requestAccessToken
        parameters:
          - $ref: "#/components/parameters/key_name"
        requestBody:
          content:
            application/json:
              example:
                capability:
                  channel1:
                    - publish
                    - subscribe
                  wildcard:channels:*:
                    - publish
                keyName: YourKey.Name
                timestamp: "1559124196551"
              schema:
                oneOf:
                  - $ref: "#/components/schemas/TokenRequest"
                  - $ref: "#/components/schemas/SignedTokenRequest"
        responses:
          2XX:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/TokenDetails"
              application/x-msgpack:
                schema:
                  $ref: "#/components/schemas/TokenDetails"
            description: OK
          default:
            $ref: "#/components/responses/Error"
        summary: Request an access token
        tags:
          - Authentication
    /push/channelSubscriptions:
      delete:
        description: Delete a device details object.
        operationId: deletePushDeviceDetails
        parameters:
          - description: Filter to restrict to subscriptions associated with that channel.
            in: query
            name: channel
            schema:
              type: string
          - description: Must be set when clientId is empty, cannot be used with clientId.
            in: query
            name: deviceId
            schema:
              type: string
          - description: Must be set when deviceId is empty, cannot be used with deviceId.
            in: query
            name: clientId
            schema:
              type: string
        responses:
          2XX:
            description: OK
          default:
            $ref: "#/components/responses/Error"
        summary: Delete a registered device's update token
        tags:
          - Push
      get:
        description: Get a list of push notification subscriptions to channels.
        operationId: getPushSubscriptionsOnChannels
        parameters:
          - description: Filter to restrict to subscriptions associated with that channel.
            in: query
            name: channel
            schema:
              type: string
          - description: Optional filter to restrict to devices associated with that
              deviceId. Cannot be used with clientId.
            in: query
            name: deviceId
            schema:
              type: string
          - description: Optional filter to restrict to devices associated with that
              clientId. Cannot be used with deviceId.
            in: query
            name: clientId
            schema:
              type: string
          - description: The maximum number of records to return.
            in: query
            name: limit
            schema:
              default: 100
              maximum: 1000
              type: integer
        responses:
          2XX:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/DeviceDetails"
            description: OK
          default:
            $ref: "#/components/responses/Error"
        summary: List channel subscriptions
        tags:
          - Push
      parameters:
        - $ref: "#/components/parameters/versionHeader"
        - $ref: "#/components/parameters/responseFormat"
      post:
        description: Subscribe either a single device or all devices associated with a
          client ID to receive push notifications from messages sent to a
          channel.
        operationId: subscribePushDeviceToChannel
        requestBody:
          content:
            application/json:
              example:
                channel: my:channel
                clientId: myClientId
              schema:
                oneOf:
                  - properties:
                      channel:
                        description: Channel name.
                        type: string
                      deviceId:
                        description: Must be set when clientId is empty, cannot be used with clientId.
                        type: string
                    type: object
                  - properties:
                      channel:
                        description: Channel name.
                        type: string
                      clientId:
                        description: Must be set when deviceId is empty, cannot be used with deviceId.
                        type: string
                    type: object
            application/x-msgpack:
              example:
                channel: my:channel
                clientId: myClientId
              schema:
                oneOf:
                  - properties:
                      channel:
                        description: Channel name.
                        type: string
                      deviceId:
                        description: Must be set when clientId is empty, cannot be used with clientId.
                        type: string
                    type: object
                  - properties:
                      channel:
                        description: Channel name.
                        type: string
                      clientId:
                        description: Must be set when deviceId is empty, cannot be used with deviceId.
                        type: string
                    type: object
            application/x-www-form-urlencoded:
              example:
                channel: my:channel
                clientId: myClientId
              schema:
                oneOf:
                  - properties:
                      channel:
                        description: Channel name.
                        type: string
                      deviceId:
                        description: Must be set when clientId is empty, cannot be used with clientId.
                        type: string
                    type: object
                  - properties:
                      channel:
                        description: Channel name.
                        type: string
                      clientId:
                        description: Must be set when deviceId is empty, cannot be used with deviceId.
                        type: string
                    type: object
        responses:
          2XX:
            description: OK
          default:
            $ref: "#/components/responses/Error"
        summary: Subscribe a device to a channel
        tags:
          - Push
    /push/channels:
      get:
        description: Returns a paginated response of channel names.
        operationId: getChannelsWithPushSubscribers
        responses:
          2XX:
            content:
              application/json:
                schema:
                  items:
                    type: string
                  type: array
              application/x-msgpack:
                schema:
                  items:
                    type: string
                  type: array
              text/html:
                schema:
                  items:
                    type: string
                  type: array
            description: OK
          default:
            $ref: "#/components/responses/Error"
        summary: List all channels with at least one subscribed device
        tags:
          - Push
      parameters:
        - $ref: "#/components/parameters/versionHeader"
        - $ref: "#/components/parameters/responseFormat"
    /push/deviceRegistrations:
      delete:
        description: Unregisters devices. All their subscriptions for receiving push
          notifications through channels will also be deleted.
        operationId: unregisterAllPushDevices
        parameters:
          - description: Optional filter to restrict to devices associated with that
              deviceId. Cannot be used with clientId.
            in: query
            name: deviceId
            schema:
              type: string
          - description: Optional filter to restrict to devices associated with that
              clientId. Cannot be used with deviceId.
            in: query
            name: clientId
            schema:
              type: string
        responses:
          2XX:
            description: OK
          default:
            $ref: "#/components/responses/Error"
        summary: Unregister matching devices for push notifications
        tags:
          - Push
      get:
        description: List of device details of devices registed for push notifications.
        operationId: getRegisteredPushDevices
        parameters:
          - description: Optional filter to restrict to devices associated with that
              deviceId.
            in: query
            name: deviceId
            schema:
              type: string
          - description: Optional filter to restrict to devices associated with that
              clientId.
            in: query
            name: clientId
            schema:
              type: string
          - description: The maximum number of records to return.
            in: query
            name: limit
            schema:
              default: 100
              maximum: 1000
              type: integer
        responses:
          2XX:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/DeviceDetails"
              application/x-msgpack:
                schema:
                  $ref: "#/components/schemas/DeviceDetails"
              text/html:
                schema:
                  $ref: "#/components/schemas/DeviceDetails"
            description: OK
          default:
            $ref: "#/components/responses/Error"
        summary: List devices registered for receiving push notifications
        tags:
          - Push
      parameters:
        - $ref: "#/components/parameters/versionHeader"
        - $ref: "#/components/parameters/responseFormat"
      post:
        description: Register a device’s details, including the information necessary to
          deliver push notifications to it. Requires "push-admin" capability.
        operationId: registerPushDevice
        requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceDetails"
            application/x-msgpack:
              schema:
                $ref: "#/components/schemas/DeviceDetails"
        responses:
          2XX:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/DeviceDetails"
              application/x-msgpack:
                schema:
                  $ref: "#/components/schemas/DeviceDetails"
              text/html:
                schema:
                  $ref: "#/components/schemas/DeviceDetails"
            description: OK
          default:
            $ref: "#/components/responses/Error"
        summary: Register a device for receiving push notifications
        tags:
          - Push
    "/push/deviceRegistrations/{device_id}":
      delete:
        description: Unregisters a single device by its device ID. All its subscriptions
          for receiving push notifications through channels will also be
          deleted.
        operationId: unregisterPushDevice
        parameters:
          - $ref: "#/components/parameters/deviceId"
        responses:
          2XX:
            description: OK
          default:
            $ref: "#/components/responses/Error"
        summary: Unregister a single device for push notifications
        tags:
          - Push
      get:
        description: Get the full details of a device.
        operationId: getPushDeviceDetails
        parameters:
          - $ref: "#/components/parameters/deviceId"
        responses:
          2XX:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/DeviceDetails"
              application/x-msgpack:
                schema:
                  $ref: "#/components/schemas/DeviceDetails"
              text/html:
                schema:
                  $ref: "#/components/schemas/DeviceDetails"
            description: OK
          default:
            $ref: "#/components/responses/Error"
        summary: Get a device registration
        tags:
          - Push
      parameters:
        - $ref: "#/components/parameters/versionHeader"
        - $ref: "#/components/parameters/responseFormat"
      patch:
        description: Specific attributes of an existing registration can be updated.
          Only clientId, metadata and push.recipient are mutable.
        operationId: patchPushDeviceDetails
        parameters:
          - $ref: "#/components/parameters/deviceId"
        requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceDetails"
            application/x-msgpack:
              schema:
                $ref: "#/components/schemas/DeviceDetails"
            application/x-www-form-urlencoded:
              schema:
                $ref: "#/components/schemas/DeviceDetails"
        responses:
          2XX:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/DeviceDetails"
              application/x-msgpack:
                schema:
                  $ref: "#/components/schemas/DeviceDetails"
              text/html:
                schema:
                  $ref: "#/components/schemas/DeviceDetails"
            description: OK
          default:
            $ref: "#/components/responses/Error"
        summary: Update a device registration
        tags:
          - Push
      put:
        description: Device registrations can be upserted (the existing registration is
          replaced entirely) with a PUT operation. Only clientId, metadata and
          push.recipient are mutable.
        operationId: putPushDeviceDetails
        parameters:
          - $ref: "#/components/parameters/deviceId"
        requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceDetails"
            application/x-msgpack:
              schema:
                $ref: "#/components/schemas/DeviceDetails"
            application/x-www-form-urlencoded:
              schema:
                $ref: "#/components/schemas/DeviceDetails"
        responses:
          2XX:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/DeviceDetails"
              application/x-msgpack:
                schema:
                  $ref: "#/components/schemas/DeviceDetails"
              text/html:
                schema:
                  $ref: "#/components/schemas/DeviceDetails"
            description: OK
          default:
            $ref: "#/components/responses/Error"
        summary: Update a device registration
        tags:
          - Push
    "/push/deviceRegistrations/{device_id}/resetUpdateToken":
      get:
        description: Gets an updated device details object.
        operationId: updatePushDeviceDetails
        parameters:
          - $ref: "#/components/parameters/deviceId"
        responses:
          2XX:
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/DeviceDetails"
              application/x-msgpack:
                schema:
                  $ref: "#/components/schemas/DeviceDetails"
              text/html:
                schema:
                  $ref: "#/components/schemas/DeviceDetails"
            description: OK
          default:
            $ref: "#/components/responses/Error"
        summary: Reset a registered device's update token
        tags:
          - Push
      parameters:
        - $ref: "#/components/parameters/versionHeader"
        - $ref: "#/components/parameters/responseFormat"
    /push/publish:
      parameters:
        - $ref: "#/components/parameters/versionHeader"
        - $ref: "#/components/parameters/responseFormat"
      post:
        description: A convenience endpoint to deliver a push notification payload to a
          single device or set of devices identified by their client identifier.
        operationId: publishPushNotificationToDevices
        requestBody:
          content:
            application/json:
              schema:
                properties:
                  push:
                    $ref: "#/components/schemas/Push"
                  recipient:
                    $ref: "#/components/schemas/Recipient"
                required:
                  - recipient
                type: object
            application/x-msgpack:
              schema:
                properties:
                  push:
                    $ref: "#/components/schemas/Push"
                  recipient:
                    $ref: "#/components/schemas/Recipient"
                required:
                  - recipient
                type: object
            application/x-www-form-urlencoded:
              schema:
                properties:
                  push:
                    $ref: "#/components/schemas/Push"
                  recipient:
                    $ref: "#/components/schemas/Recipient"
                required:
                  - recipient
                type: object
        responses:
          2XX:
            description: OK
          default:
            $ref: "#/components/responses/Error"
        summary: Publish a push notification to device(s)
        tags:
          - Push
    /stats:
      get:
        description: The Ably system can be queried to obtain usage statistics for a
          given application, and results are provided aggregated across all
          channels in use in the application in the specified period. Stats may
          be used to track usage against account quotas.
        operationId: getStats
        parameters:
          - $ref: "#/components/parameters/filterStart"
          - $ref: "#/components/parameters/filterLimit"
          - $ref: "#/components/parameters/filterEnd"
          - $ref: "#/components/parameters/filterDirection"
          - description: Specifies the unit of aggregation in the returned results.
            in: query
            name: unit
            schema:
              default: minute
              enum:
                - minute
                - hour
                - day
                - month
              type: string
        responses:
          2XX:
            content:
              application/json:
                schema:
                  type: object
            description: OK
          default:
            $ref: "#/components/responses/Error"
        summary: Retrieve usage statistics for an application
        tags:
          - Stats
      parameters:
        - $ref: "#/components/parameters/versionHeader"
        - $ref: "#/components/parameters/responseFormat"
    /time:
      get:
        description: This returns the service time in milliseconds since the epoch.
        operationId: getTime
        responses:
          2XX:
            content:
              application/json:
                schema:
                  items:
                    type: integer
                  type: array
              application/x-msgpack:
                schema:
                  items:
                    type: integer
                  type: array
              text/html:
                schema:
                  type: string
            description: OK
          default:
            $ref: "#/components/responses/Error"
        summary: Get the service time
        tags:
          - Stats
      parameters:
        - $ref: "#/components/parameters/versionHeader"
        - $ref: "#/components/parameters/responseFormat"
  components:
    headers:
      Link:
        schema:
          pattern: (<(.*)?>; rel=\"(first|current|last)?\",)*(<(.*)?>;
            rel=\"(first|current|last)?\")+
    parameters:
      channelId:
        description: The [Channel's ID](https://www.ably.io/documentation/rest/channels).
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      deviceId:
        description: Device's ID.
        in: path
        name: device_id
        required: true
        schema:
          type: string
      filterDirection:
        in: query
        name: direction
        schema:
          default: backwards
          enum:
            - forwards
            - backwards
          type: string
      filterEnd:
        in: query
        name: end
        schema:
          default: now
          type: string
      filterLimit:
        in: query
        name: limit
        schema:
          default: "100"
          type: integer
      filterStart:
        in: query
        name: start
        schema:
          type: string
      key_name:
        description: The [key
          name](https://www.ably.io/documentation/rest-api/token-request-spec#api-key-format)
          comprises of the app ID and key ID of an API key.
        in: path
        name: keyName
        required: true
        schema:
          type: string
      responseFormat:
        description: The response format you would like
        in: query
        name: format
        schema:
          enum:
            - json
            - jsonp
            - msgpack
            - html
          type: string
      versionHeader:
        description: The version of the API you wish to use.
        in: header
        name: X-Ably-Version
        schema:
          type: string
    responses:
      Error:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Error"
          application/x-msgpack:
            schema:
              $ref: "#/components/schemas/Error"
          text/html:
            schema:
              $ref: "#/components/schemas/Error"
        description: Error
        headers:
          x-ably-errorcode:
            $ref: "#/components/headers/ErrorCode"
          x-ably-errormessage:
            $ref: "#/components/headers/ErrorMessage"
          x-ably-serverid:
            $ref: "#/components/headers/ServerId"
    schemas:
      ChannelDetails:
        properties:
          channelId:
            description: The required name of the channel including any qualifier, if any.
          isGlobalMaster:
            description: In events relating to the activity of a channel in a specific
              region, this optionally identifies whether or not that region is
              responsible for global coordination of the channel.
          region:
            description: In events relating to the activity of a channel in a specific
              region, this optionally identifies the region.
      ChannelStatus:
        properties:
          isActive:
            description: A required boolean value indicating whether the channel that is the
              subject of the event is active. For events indicating regional
              activity of a channel this indicates activity in that region, not
              global activity.
      DeviceDetails:
        properties:
          clientId:
            description: Optional trusted client identifier for the device.
          deviceSecret:
            description: Secret value for the device.
          formFactor:
            description: Form factor of the push device.
          id:
            description: Unique identifier for the device generated by the device itself.
          platform:
            description: Platform of the push device.
          push.state:
            description: the current state of the push device.
            readOnly: true
      Error:
        properties:
          code:
            description: Error code.
          href:
            description: Link to help with error.
          message:
            description: Message explaining the error's cause.
          serverId:
            description: Server ID with which error was encountered.
          statusCode:
            description: Status error code.
      Message:
        properties:
          clientId:
            description: The [client
              ID](https://www.ably.io/documentation/core-features/authentication#identified-clients)
              of the publisher of this message.
          connectionId:
            description: The connection ID of the publisher of this message.
          data:
            description: The string encoded payload, with the encoding specified below.
          encoding:
            description: This will typically be empty as all messages received from Ably are
              automatically decoded client-side using this value. However, if
              the message encoding cannot be processed, this attribute will
              contain the remaining transformations not applied to the data
              payload.
          id:
            description: A Unique ID that can be specified by the publisher for [idempotent
              publishing](https://www.ably.io/documentation/rest/messages#idempotent).
            readOnly: true
          name:
            description: The event name, if provided.
          timestamp:
            description: Timestamp when the message was received by the Ably, as
              milliseconds since the epoch.
            readOnly: true
      Notification:
        properties:
          body:
            description: Text below title on the expanded notification.
          collapseKey:
            description: Platform-specific, used to group notifications together.
          icon:
            description: Platform-specific icon for the notification.
          sound:
            description: Platform-specific sound for the notification.
          title:
            description: Title to display at the notification.
      Occupancy:
        properties:
          presenceConnections:
            description: The number of connections that are authorised to enter members into
              the presence channel.
          presenceMembers:
            description: The number of members currently entered into the presence channel.
          presenceSubscribers:
            description: The number of connections that are authorised to subscribe to
              presence messages.
          publishers:
            description: The number of connections attached to the channel that are
              authorised to publish.
          subscribers:
            description: The number of connections attached that are authorised to subscribe
              to messages.
      PresenceMessage:
        properties:
          action:
            description: The event signified by a PresenceMessage.
            readOnly: true
          clientId:
            description: The client ID of the publisher of this presence update.
          connectionId:
            description: The connection ID of the publisher of this presence update.
          data:
            description: The presence update payload, if provided.
          encoding:
            description: This will typically be empty as all presence updates received from
              Ably are automatically decoded client-side using this value.
              However, if the message encoding cannot be processed, this
              attribute will contain the remaining transformations not applied
              to the data payload.
          id:
            description: Unique ID assigned by Ably to this presence update.
            readOnly: true
          timestamp:
            description: Timestamp when the presence update was received by Ably, as
              milliseconds since the epoch.
            readOnly: true
      Push:
        properties:
          data:
            description: Arbitrary [key-value string-to-string
              payload](https://www.ably.io/documentation/general/push/publish#channel-broadcast-example).
      Recipient:
        properties:
          clientId:
            description: Client ID of recipient
            writeOnly: true
          deviceId:
            description: Client ID of recipient
            writeOnly: true
          deviceToken:
            description: when using APNs, specifies the required device token.
          registrationToken:
            description: when using GCM or FCM, specifies the required registration token.
          transportType:
            description: Defines which push platform is being used.
      SignedTokenRequest:
        allOf:
          - $ref: "#/components/schemas/TokenRequest"
          - properties:
              mac:
                description: A signature, generated as an HMAC of each of the above components,
                  using the key secret value.
                type: string
            required:
              - mac
            type: object
      TokenDetails:
        properties:
          capability:
            description: Regular expression representation of the capabilities of the token.
          expires:
            description: Timestamp of token expiration.
          issued:
            description: Timestamp of token creation.
          keyName:
            description: Name of the key used to create the token
          token:
            description: The Ably Token.
      TokenRequest:
        properties:
          capability:
            example:
              channel1:
                - publish
                - subscribe
          clientId:
            description: The [client
              ID](https://www.ably.io/documentation/core-features/authentication#identified-clients)
              to be assosciated with the token. Can be set to * to allow for any
              client ID to be used.
          keyName:
            description: Name of the key used for the TokenRequest. The keyName comprises of
              the app ID and key ID on an API Key.
            example: xVLyHw.LMJZxw
          nonce:
            description: An unquoted, un-escaped random string of at least 16 characters.
              Used to ensure the Ably TokenRequest cannot be reused.
          timestamp:
            description: Time of creation of the Ably TokenRequest.
    securitySchemes:
      basicAuth:
        description: Basic Authentication using an [API
          key](https://www.ably.io/documentation/core-features/authentication#basic-authentication).
        scheme: basic
        type: http
      bearerAuth:
        description: Token Authentication using an [Ably
          Token](https://www.ably.io/documentation/core-features/authentication#basic-authentication),
          or optionally an [Ably
          JWT](https://www.ably.io/documentation/core-features/authentication#ably-jwt-process).
        scheme: bearer
        type: http
