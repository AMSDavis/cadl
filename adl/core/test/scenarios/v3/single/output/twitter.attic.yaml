paths:
  /labs/2/openapi.json:
    get:
      description: Full open api spec in JSON format. (See
        https://github.com/OAI/OpenAPI-Specification/blob/master/README.md)
      operationId: getOpenApiSpec
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The request was successful
      summary: Returns the open api spec document.
      tags:
        - General
  /labs/2/tweets:
    get:
      description: Returns a variety of information about the Tweet specified by the
        requested ID
      operationId: findTweetsById
      parameters:
        - description: A comma separated list of Tweet IDs. Up to 100 are allowed in a
            single request.
          explode: false
          in: query
          name: ids
          required: true
          schema:
            items:
              $ref: "#/components/schemas/TweetID"
            maxItems: 100
            minItems: 1
            type: array
          style: form
        - $ref: "#/components/parameters/TweetExpansionsParameter"
        - $ref: "#/components/parameters/TweetFieldsParameter"
        - $ref: "#/components/parameters/UserFieldsParameter"
        - $ref: "#/components/parameters/MediaFieldsParameter"
        - $ref: "#/components/parameters/PlaceFieldsParameter"
        - $ref: "#/components/parameters/PollFieldsParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TweetLookupResponse"
          description: The request was successful
        default:
          $ref: "#/components/responses/HttpErrorResponse"
      summary: Returns hydrated Tweet objects
      tags:
        - Tweets
  /labs/2/tweets/search:
    get:
      description: Returns Tweets from the last 7 days that match a search query.
      operationId: tweetsRecentSearch
      parameters:
        - description: One query/rule/filter for matching Tweets. Up to 512 characters.
          in: query
          name: query
          required: true
          schema:
            maxLength: 512
            minLength: 1
            type: string
        - description: YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp (from most recent 7
            days) from which the Tweets will be provided. Timestamp is in second
            granularity and is inclusive (i.e. 12:00:01 includes the first
            second of the minute).
          in: query
          name: start_time
          required: false
          schema:
            format: date-time
            type: string
        - description: YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to
            which the Tweets will be provided. Timestamp is in second
            granularity and is exclusive (i.e. 12:00:01 excludes the first
            second of the minute).
          in: query
          name: end_time
          required: false
          schema:
            format: date-time
            type: string
        - description: Returns results with a Tweet ID greater than (that is, more recent
            than) the specified ID.
          in: query
          name: since_id
          required: false
          schema:
            $ref: "#/components/schemas/TweetID"
        - description: Returns results with a Tweet ID less than (that is, older than) the
            specified ID.
          in: query
          name: until_id
          required: false
          schema:
            $ref: "#/components/schemas/TweetID"
        - description: The maximum number of search results to be returned by a request.
          in: query
          name: max_results
          required: false
          schema:
            default: 10
            format: int32
            maximum: 100
            minimum: 10
            type: integer
        - description: This parameter is used to get the next 'page' of results. The value
            used with the parameter is pulled directly from the response
            provided by the API, and should not be modified.
          in: query
          name: next_token
          required: false
          schema:
            type: string
        - $ref: "#/components/parameters/TweetExpansionsParameter"
        - $ref: "#/components/parameters/TweetFieldsParameter"
        - $ref: "#/components/parameters/UserFieldsParameter"
        - $ref: "#/components/parameters/MediaFieldsParameter"
        - $ref: "#/components/parameters/PlaceFieldsParameter"
        - $ref: "#/components/parameters/PollFieldsParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TweetSearchResponse"
          description: Tweets recent search response
        default:
          $ref: "#/components/responses/HttpErrorResponse"
      summary: Returns Tweets from the last 7 days that match a search query.
      tags:
        - Search
        - Tweets
  "/labs/2/tweets/{id}":
    get:
      description: Returns a variety of information about the Tweet specified by the
        requested ID
      operationId: findTweetById
      parameters:
        - description: A single Tweet ID.
          in: path
          name: id
          required: true
          schema:
            $ref: "#/components/schemas/TweetID"
        - $ref: "#/components/parameters/TweetExpansionsParameter"
        - $ref: "#/components/parameters/TweetFieldsParameter"
        - $ref: "#/components/parameters/UserFieldsParameter"
        - $ref: "#/components/parameters/MediaFieldsParameter"
        - $ref: "#/components/parameters/PlaceFieldsParameter"
        - $ref: "#/components/parameters/PollFieldsParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleTweetLookupResponse"
          description: The request was successful
        default:
          $ref: "#/components/responses/HttpErrorResponse"
      summary: Returns hydrated Tweet objects
      tags:
        - Tweets
  "/labs/2/tweets/{id}/hidden":
    put:
      description: Tweet ID in the path is that of the reply to hide.
      operationId: hideReplyById
      parameters:
        - description: The ID of the reply that you want to hide.
          in: path
          name: id
          required: true
          schema:
            $ref: "#/components/schemas/TweetID"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                hidden:
                  enum:
                    - true
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      hidden:
                        enum:
                          - true
                        type: boolean
                    type: object
                type: object
          description: A successful response. The reply has been hidden.
        default:
          $ref: "#/components/responses/HttpErrorResponse"
      summary: Hides a reply to an owned conversation.
      tags:
        - Tweets
  /labs/2/users:
    get:
      description: This endpoint returns information about users. Specify users by their ID.
      operationId: findUsersById
      parameters:
        - description: Required. A list of User IDs, comma-separated. You can specify up
            to 100 IDs.
          explode: false
          in: query
          name: ids
          required: true
          schema:
            items:
              $ref: "#/components/schemas/UserID"
            maxItems: 100
            minItems: 1
            type: array
          style: form
        - $ref: "#/components/parameters/UserExpansionsParameter"
        - $ref: "#/components/parameters/TweetFieldsParameter"
        - $ref: "#/components/parameters/UserFieldsParameter"
        - $ref: "#/components/parameters/MediaFieldsParameter"
        - $ref: "#/components/parameters/PlaceFieldsParameter"
        - $ref: "#/components/parameters/PollFieldsParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLookupResponse"
          description: The request was successful
        default:
          $ref: "#/components/responses/HttpErrorResponse"
      summary: Return details for the specified users
      tags:
        - Users
  /labs/2/users/by:
    get:
      description: This endpoint returns information about users. Specify users by
        their username.
      operationId: findUsersByUsername
      parameters:
        - description: Required . A list of usernames, comma-separated. You can specify up
            to 100 usernames.
          explode: false
          in: query
          name: usernames
          required: true
          schema:
            items:
              $ref: "#/components/schemas/UserName"
            maxItems: 100
            minItems: 1
            type: array
          style: form
        - $ref: "#/components/parameters/UserExpansionsParameter"
        - $ref: "#/components/parameters/TweetFieldsParameter"
        - $ref: "#/components/parameters/UserFieldsParameter"
        - $ref: "#/components/parameters/MediaFieldsParameter"
        - $ref: "#/components/parameters/PlaceFieldsParameter"
        - $ref: "#/components/parameters/PollFieldsParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLookupResponse"
          description: The request was successful
        default:
          $ref: "#/components/responses/HttpErrorResponse"
      summary: Return details for the specified users
      tags:
        - Users
  "/labs/2/users/by/username/{username}":
    get:
      description: This endpoint returns information about a user. Specify user by username.
      operationId: findUserByUsername
      parameters:
        - description: Required. A username.
          in: path
          name: username
          required: true
          schema:
            $ref: "#/components/schemas/UserName"
        - $ref: "#/components/parameters/UserExpansionsParameter"
        - $ref: "#/components/parameters/TweetFieldsParameter"
        - $ref: "#/components/parameters/UserFieldsParameter"
        - $ref: "#/components/parameters/MediaFieldsParameter"
        - $ref: "#/components/parameters/PlaceFieldsParameter"
        - $ref: "#/components/parameters/PollFieldsParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleUserLookupResponse"
          description: The request was successful
        default:
          $ref: "#/components/responses/HttpErrorResponse"
      summary: Return details for the specified users
      tags:
        - Users
  "/labs/2/users/{id}":
    get:
      description: This endpoint returns information about a user. Specify user by ID.
      operationId: findUserById
      parameters:
        - description: Required. A User ID.
          in: path
          name: id
          required: true
          schema:
            $ref: "#/components/schemas/UserID"
        - $ref: "#/components/parameters/UserExpansionsParameter"
        - $ref: "#/components/parameters/TweetFieldsParameter"
        - $ref: "#/components/parameters/UserFieldsParameter"
        - $ref: "#/components/parameters/MediaFieldsParameter"
        - $ref: "#/components/parameters/PlaceFieldsParameter"
        - $ref: "#/components/parameters/PollFieldsParameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleUserLookupResponse"
          description: The request was successful
        default:
          $ref: "#/components/responses/HttpErrorResponse"
      summary: Return details for the specified users
      tags:
        - Users
components:
  responses:
    HttpErrorResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
      description: The request has failed.
