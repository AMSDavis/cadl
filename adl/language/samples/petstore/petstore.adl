model Pet {
  name: string;
  tag?: string 
}

model Error {
  code: int32,
  message: string
}

model Toy {
  id: int64,
  petId: int64,
  name: string
}

@response
model PetSuccessResponse {
  content: Pet
}

@response
model PetNotModifiedResponse {
  headers: {
    'Modified-Since': date
  },
  statusCode: 304,
  content: Pet
}

interface PetsResource {
  delete(petId: int32): [ {}, Error ],

  @evenFancierDescription("list pets")
  list(): [ Pet[], Error ],

  @description("Returns a pet. Supports eTags.")
  read(petId: string): [ PetSuccessResponse | PetNotModifiedResponse, Error ],

  create(pet: PetRequest): [ PetSuccessResponse, Error ],
}

@response
model PetRequest {
  headers: {},
  content: Pet
}

@resource("/pets/{petId}/toys")
interface ListPetToysResponse {
  list(petId: string, nameFilter: string): [{}, Error]
}