using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace {{it.nameSpace}}.Service.Controllers
{
    public static class {{it.serviceName}}ServiceRoutes
    {
        public const string ListOperations = "providers/{{it.nameSpace}}/operations";
{{@each(it.resources) => resource, index}}
        public const string {{resource.name}}Item = "{{resource.itemPath}}";
{{@if(resource.hasSubscriptionList)}}
        public const string {{resource.name}}ListBySubscription = "/subscriptions/{subscriptionId}/providers/{{resource.nameSpace}}/{{resource.serializedName}}";
{{/if}}
{{@if(resource.hasResourceGroupList)}}
        public const string {{resource.name}}ListByResourceGroup = "/subscriptions/{subscriptionId}/resourceGroups{resourceGroupName}/providers/{{resource.nameSpace}}/{{resource.serializedName}}";
{{/if}}
{{@each(resource.operations) => operation, opIndex}}
{{@if(operation.verb.toUpperCase() === "PUT")}}
        public const string {{resource.name}}ValidateCreate = "{{resource.itemPath}}/validateCreate";
{{/if}}
{{@if(operation.verb.toUpperCase() === "PATCH")}}
        public const string {{resource.name}}ValidatePatch = "{{resource.itemPath}}/validatePatch";
{{/if}}
{{@if(operation.verb.toUpperCase() === "DELETE")}}
        public const string {{resource.name}}ValidateDelete = "{{resource.itemPath}}/validateDelete";
{{/if}}
{{@if(operation.verb.toUpperCase() === "POST")}}
        public const string {{resource.name}}Validate{{operation.name}} = "{{resource.itemPath}}/validate{{operation.subPath | initialCaps}}";
        public const string {{resource.name}}Item{{operation.name}} = "{{resource.itemPath}}/{{operation.subPath}}";
{{/if}}
{{/each}}
{{/each}}
    }
}
