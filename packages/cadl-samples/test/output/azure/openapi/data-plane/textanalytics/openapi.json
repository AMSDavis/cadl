{
  "openapi": "3.0.0",
  "info": {
    "title": "Text Analytics",
    "version": "v3.1"
  },
  "tags": [],
  "paths": {
    "/entities/recognition/general": {
      "post": {
        "operationId": "Entities_recognize",
        "summary": "Named Entity Recognition",
        "description": "The API returns a list of general named entities in a given document. For the list of supported entity types, check <a href=\"https://aka.ms/taner\">Supported Entity Types in Text Analytics API</a>. See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled languages.",
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelVersionParameter"
          },
          {
            "$ref": "#/components/parameters/LoggingOptOutParameter"
          },
          {
            "$ref": "#/components/parameters/StringIndexTypeParameter"
          },
          {
            "$ref": "#/components/parameters/ShowStatsParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntitiesResult"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Collection of documents to analyze.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultiLanguageBatchInput"
              }
            }
          }
        }
      }
    },
    "/entities/linking": {
      "post": {
        "operationId": "EntityLinking_recognize",
        "summary": "Linked entities from a well known knowledge base",
        "description": "The API returns a list of recognized entities with links to a well known knowledge base. See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled languages.",
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelVersionParameter"
          },
          {
            "$ref": "#/components/parameters/LoggingOptOutParameter"
          },
          {
            "$ref": "#/components/parameters/StringIndexTypeParameter"
          },
          {
            "$ref": "#/components/parameters/ShowStatsParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityLinkingResult"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Collection of documents to analyze.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultiLanguageBatchInput"
              }
            }
          }
        }
      }
    },
    "/entities/health/jobs": {
      "post": {
        "operationId": "Health_submit",
        "summary": "Submit healthcare analysis job",
        "description": "Start a healthcare analysis job to recognize healthcare related entities (drugs, conditions, symptoms, etc) and their relations.",
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelVersionParameter"
          },
          {
            "$ref": "#/components/parameters/LoggingOptOutParameter"
          },
          {
            "$ref": "#/components/parameters/ShowStatsParameter"
          },
          {
            "$ref": "#/components/parameters/StringIndexTypeParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the job.",
            "headers": {
              "Operation-Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Collection of documents to analyze.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultiLanguageBatchInput"
              }
            }
          }
        }
      }
    },
    "/entities/health/jobs/{jobId}": {
      "get": {
        "operationId": "Health_getStatus",
        "summary": "Get healthcare analysis job status and results",
        "description": "Get details of the healthcare prediction job specified by the jobId.",
        "parameters": [
          {
            "$ref": "#/components/parameters/JobIdParameter"
          },
          {
            "$ref": "#/components/parameters/ShowStatsParameter"
          },
          {
            "$ref": "#/components/parameters/JobParameters.$top"
          },
          {
            "$ref": "#/components/parameters/JobParameters.$skip"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthcareJobState"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Health_cancel",
        "summary": "Cancel healthcare analysis job",
        "description": "Cancel healthcare prediction job.",
        "parameters": [
          {
            "$ref": "#/components/parameters/JobIdParameter"
          }
        ],
        "responses": {
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the job.",
            "headers": {
              "Operation-Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/languages": {
      "post": {
        "operationId": "Languages_detect",
        "summary": "Detect Language",
        "description": "The API returns the detected language and a numeric score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true. See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled languages.",
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelVersionParameter"
          },
          {
            "$ref": "#/components/parameters/LoggingOptOutParameter"
          },
          {
            "$ref": "#/components/parameters/StringIndexTypeParameter"
          },
          {
            "$ref": "#/components/parameters/ShowStatsParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageResult"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Collection of documents to analyze for language endpoint.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageBatchInput"
              }
            }
          }
        }
      }
    },
    "/entities/recognition/pii": {
      "post": {
        "operationId": "Pii_recognize",
        "summary": "Entities containing personal information",
        "description": "The API returns a list of entities with personal information (\\\"SSN\\\", \\\"Bank Account\\\" etc) in the document. For the list of supported entity types, check <a href=\"https://aka.ms/tanerpii\">Supported Entity Types in Text Analytics API</a>. See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled languages.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelVersionParameter"
          },
          {
            "$ref": "#/components/parameters/LoggingOptOutParameter"
          },
          {
            "$ref": "#/components/parameters/StringIndexTypeParameter"
          },
          {
            "$ref": "#/components/parameters/PiiParameters.domain"
          },
          {
            "$ref": "#/components/parameters/PiiParameters.piiCategories"
          },
          {
            "$ref": "#/components/parameters/ShowStatsParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PiiResult"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Collection of documents to analyze.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultiLanguageBatchInput"
              }
            }
          }
        }
      }
    },
    "/keyPhrases": {
      "post": {
        "operationId": "KeyPhrases_identifyKeyPhrases",
        "summary": "Key Phrases",
        "description": "The API returns a list of strings denoting the key phrases in the input text. See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled languages.",
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelVersionParameter"
          },
          {
            "$ref": "#/components/parameters/LoggingOptOutParameter"
          },
          {
            "$ref": "#/components/parameters/ShowStatsParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KeyPhraseResult"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Collection of documents to analyze.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultiLanguageBatchInput"
              }
            }
          }
        }
      }
    },
    "/sentiment": {
      "post": {
        "operationId": "Sentiment_analyze",
        "summary": "Sentiment",
        "description": "The API returns a detailed sentiment analysis for the input text. The analysis is done in multiple levels of granularity, start from the a document level, down to sentence and key terms (targets and assessments).",
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelVersionParameter"
          },
          {
            "$ref": "#/components/parameters/LoggingOptOutParameter"
          },
          {
            "$ref": "#/components/parameters/StringIndexTypeParameter"
          },
          {
            "$ref": "#/components/parameters/SentimentParameters.opinionMining"
          },
          {
            "$ref": "#/components/parameters/ShowStatsParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SentimentResult"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Collection of documents to analyze.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultiLanguageBatchInput"
              }
            }
          }
        }
      }
    },
    "/analyze": {
      "post": {
        "operationId": "Analyze_submit",
        "summary": "Submit analysis job",
        "description": "Submit a collection of text documents for analysis. Specify one or more unique tasks to be executed.",
        "parameters": [],
        "responses": {
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the job.",
            "headers": {
              "Operation-Location": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Collection of documents to analyze and tasks to execute.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyzeBatchInput"
              }
            }
          }
        }
      }
    },
    "/analyze/jobs/{jobId}": {
      "get": {
        "operationId": "Analyze_getStatus",
        "summary": "Get analysis status and results",
        "description": "Get the status of an analysis job.  A job may consist of one or more tasks.  Once all tasks are completed, the job will transition to the completed state and results will be available for each task.",
        "parameters": [
          {
            "$ref": "#/components/parameters/JobIdParameter"
          },
          {
            "$ref": "#/components/parameters/ShowStatsParameter"
          },
          {
            "$ref": "#/components/parameters/JobParameters.$top"
          },
          {
            "$ref": "#/components/parameters/JobParameters.$skip"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyzeJobState"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ModelVersionParameter": {
        "name": "model-version",
        "in": "query",
        "required": false,
        "description": "This value indicates which model will be used for scoring.\nIf a model-version is not specified, the API should default to the latest, non-preview version.",
        "schema": {
          "type": "string",
          "description": "This value indicates which model will be used for scoring.\nIf a model-version is not specified, the API should default to the latest, non-preview version.",
          "default": "latest"
        }
      },
      "LoggingOptOutParameter": {
        "name": "loggingOptOut",
        "in": "query",
        "required": false,
        "description": "If set to true, you opt-out of having your text input logged for troubleshooting.\n\nBy default, Text Analytics logs your input text for 48 hours, solely to allow for\ntroubleshooting issues in providing you with the Text Analytics natural language\nprocessing functions. Setting this parameter to true disables input logging and\nmay limit our ability to remediate issues that occur. Please see Cognitive Services\nCompliance and Privacy notes at https://aka.ms/cs-compliance for additional details,\nand Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai.",
        "schema": {
          "type": "boolean"
        }
      },
      "StringIndexTypeParameter": {
        "name": "stringIndexType",
        "in": "query",
        "required": false,
        "description": "Specifies the method used to interpret string offsets.\n\nDefaults to grapheme clusters according to Unicode v8.0.0.\nFor additional information see https://aka.ms/text-analytics-offsets",
        "schema": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "string",
              "enum": [
                "TextElement_v8",
                "UnicodeCodePoint",
                "Utf16CodeUnit"
              ]
            }
          ],
          "description": "Specifies the method used to interpret string offsets.\n\nDefaults to grapheme clusters according to Unicode v8.0.0.\nFor additional information see https://aka.ms/text-analytics-offsets"
        }
      },
      "ShowStatsParameter": {
        "name": "showStats",
        "in": "query",
        "required": false,
        "description": "If set to true, response will contain request and document level statistics.",
        "schema": {
          "type": "boolean"
        }
      },
      "JobIdParameter": {
        "name": "jobId",
        "in": "path",
        "required": true,
        "description": "Job ID.",
        "schema": {
          "type": "string",
          "description": "Job ID."
        }
      },
      "JobParameters.$top": {
        "name": "$top",
        "in": "query",
        "required": false,
        "description": "Set the maximum number of results per task.\nWhen both $top and $skip are specified, $skip is applied first.",
        "schema": {
          "type": "integer",
          "format": "int32",
          "default": 20
        }
      },
      "JobParameters.$skip": {
        "name": "$skip",
        "in": "query",
        "required": false,
        "description": "Set the number of elements to offset in the response.\nWhen both $top and $skip are specified, $skip is applied first.",
        "schema": {
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      },
      "PiiParameters.domain": {
        "name": "domain",
        "in": "query",
        "required": false,
        "description": "If specified, will set the PII domain to include only a subset of the entity categories.",
        "schema": {
          "type": "string",
          "enum": [
            "phi",
            "none"
          ]
        }
      },
      "PiiParameters.piiCategories": {
        "name": "piiCategories",
        "in": "query",
        "required": false,
        "description": "Describes the PII categories to return.",
        "schema": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "string",
                "enum": [
                  "ABARoutingNumber",
                  "ARNationalIdentityNumber",
                  "AUBankAccountNumber",
                  "AUDriversLicenseNumber",
                  "AUMedicalAccountNumber",
                  "AUPassportNumber",
                  "AUTaxFileNumber",
                  "AUBusinessNumber",
                  "AUCompanyNumber",
                  "ATIdentityCard",
                  "ATTaxIdentificationNumber",
                  "ATValueAddedTaxNumber",
                  "AzureDocumentDBAuthKey",
                  "AzureIAASDatabaseConnectionAndSQLString",
                  "AzureIoTConnectionString",
                  "AzurePublishSettingPassword",
                  "AzureRedisCacheString",
                  "AzureSAS",
                  "AzureServiceBusString",
                  "AzureStorageAccountKey",
                  "AzureStorageAccountGeneric",
                  "BENationalNumber",
                  "BENationalNumberV2",
                  "BEValueAddedTaxNumber",
                  "BRCPFNumber",
                  "BRLegalEntityNumber",
                  "BRNationalIDRG",
                  "BGUniformCivilNumber",
                  "CABankAccountNumber",
                  "CADriversLicenseNumber",
                  "CAHealthServiceNumber",
                  "CAPassportNumber",
                  "CAPersonalHealthIdentification",
                  "CASocialInsuranceNumber",
                  "CLIdentityCardNumber",
                  "CNResidentIdentityCardNumber",
                  "CreditCardNumber",
                  "HRIdentityCardNumber",
                  "HRNationalIDNumber",
                  "HRPersonalIdentificationNumber",
                  "HRPersonalIdentificationOIBNumberV2",
                  "CYIdentityCard",
                  "CYTaxIdentificationNumber",
                  "CZPersonalIdentityNumber",
                  "CZPersonalIdentityV2",
                  "DKPersonalIdentificationNumber",
                  "DKPersonalIdentificationV2",
                  "DrugEnforcementAgencyNumber",
                  "EEPersonalIdentificationCode",
                  "EUDebitCardNumber",
                  "EUDriversLicenseNumber",
                  "EUGPSCoordinates",
                  "EUNationalIdentificationNumber",
                  "EUPassportNumber",
                  "EUSocialSecurityNumber",
                  "EUTaxIdentificationNumber",
                  "FIEuropeanHealthNumber",
                  "FINationalID",
                  "FINationalIDV2",
                  "FIPassportNumber",
                  "FRDriversLicenseNumber",
                  "FRHealthInsuranceNumber",
                  "FRNationalID",
                  "FRPassportNumber",
                  "FRSocialSecurityNumber",
                  "FRTaxIdentificationNumber",
                  "FRValueAddedTaxNumber",
                  "DEDriversLicenseNumber",
                  "DEPassportNumber",
                  "DEIdentityCardNumber",
                  "DETaxIdentificationNumber",
                  "DEValueAddedNumber",
                  "GRNationalIDCard",
                  "GRNationalIDV2",
                  "GRTaxIdentificationNumber",
                  "HKIdentityCardNumber",
                  "HUValueAddedNumber",
                  "HUPersonalIdentificationNumber",
                  "HUTaxIdentificationNumber",
                  "INPermanentAccount",
                  "INUniqueIdentificationNumber",
                  "IDIdentityCardNumber",
                  "InternationalBankingAccountNumber",
                  "IEPersonalPublicServiceNumber",
                  "IEPersonalPublicServiceNumberV2",
                  "ILBankAccountNumber",
                  "ILNationalID",
                  "ITDriversLicenseNumber",
                  "ITFiscalCode",
                  "ITValueAddedTaxNumber",
                  "JPBankAccountNumber",
                  "JPDriversLicenseNumber",
                  "JPPassportNumber",
                  "JPResidentRegistrationNumber",
                  "JPSocialInsuranceNumber",
                  "JPMyNumberCorporate",
                  "JPMyNumberPersonal",
                  "JPResidenceCardNumber",
                  "LVPersonalCode",
                  "LTPersonalCode",
                  "LUNationalIdentificationNumberNatural",
                  "LUNationalIdentificationNumberNonNatural",
                  "MYIdentityCardNumber",
                  "MTIdentityCardNumber",
                  "MTTaxIDNumber",
                  "NLCitizensServiceNumber",
                  "NLCitizensServiceNumberV2",
                  "NLTaxIdentificationNumber",
                  "NLValueAddedTaxNumber",
                  "NZBankAccountNumber",
                  "NZDriversLicenseNumber",
                  "NZInlandRevenueNumber",
                  "NZMinistryOfHealthNumber",
                  "NZSocialWelfareNumber",
                  "NOIdentityNumber",
                  "PHUnifiedMultiPurposeIDNumber",
                  "PLIdentityCard",
                  "PLNationalID",
                  "PLNationalIDV2",
                  "PLPassportNumber",
                  "PLTaxIdentificationNumber",
                  "PLREGONNumber",
                  "PTCitizenCardNumber",
                  "PTCitizenCardNumberV2",
                  "PTTaxIdentificationNumber",
                  "ROPersonalNumericalCode",
                  "RUPassportNumberDomestic",
                  "RUPassportNumberInternational",
                  "SANationalID",
                  "SGNationalRegistrationIdentityCardNumber",
                  "SKPersonalNumber",
                  "SITaxIdentificationNumber",
                  "SIUniqueMasterCitizenNumber",
                  "ZAIdentificationNumber",
                  "KRResidentRegistrationNumber",
                  "ESDNI",
                  "ESSocialSecurityNumber",
                  "ESTaxIdentificationNumber",
                  "SQLServerConnectionString",
                  "SENationalID",
                  "SENationalIDV2",
                  "SEPassportNumber",
                  "SETaxIdentificationNumber",
                  "SWIFTCode",
                  "CHSocialSecurityNumber",
                  "TWNationalID",
                  "TWPassportNumber",
                  "TWResidentCertificate",
                  "THPopulationIdentificationCode",
                  "TRNationalIdentificationNumber",
                  "UKDriversLicenseNumber",
                  "UKElectoralRollNumber",
                  "UKNationalHealthNumber",
                  "UKNationalInsuranceNumber",
                  "UKUniqueTaxpayerNumber",
                  "USUKPassportNumber",
                  "USBankAccountNumber",
                  "USDriversLicenseNumber",
                  "USIndividualTaxpayerIdentification",
                  "USSocialSecurityNumber",
                  "UAPassportNumberDomestic",
                  "UAPassportNumberInternational",
                  "Organization",
                  "Email",
                  "URL",
                  "Age",
                  "PhoneNumber",
                  "IPAddress",
                  "Date",
                  "Person",
                  "Address",
                  "All",
                  "Default"
                ]
              }
            ]
          }
        }
      },
      "SentimentParameters.opinionMining": {
        "name": "opinionMining",
        "in": "query",
        "required": false,
        "description": "If set to true, response will contain not only sentiment prediction but also opinion \nmining (aspect-based sentiment analysis) results.",
        "schema": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "schemas": {
      "MultiLanguageBatchInput": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MultiLanguageInput"
            },
            "x-cadl-name": "TextAnalytics.MultiLanguageInput[]",
            "description": "The set of documents to process as part of this batch."
          }
        },
        "required": [
          "documents"
        ]
      },
      "EntitiesResult": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentEntities"
            },
            "x-cadl-name": "TextAnalytics.DocumentEntities[]",
            "description": "Response by document."
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentError"
            },
            "x-cadl-name": "TextAnalytics.DocumentError[]",
            "description": "Errors by document id."
          },
          "statistics": {
            "$ref": "#/components/schemas/RequestStatistics",
            "description": "If showStats=true was specified in the request this field will contain information about the request payload."
          },
          "modelVersion": {
            "type": "string",
            "description": "This field indicates which model is used for scoring."
          }
        },
        "required": [
          "documents",
          "errors",
          "modelVersion"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error",
            "description": "Document error."
          }
        },
        "description": "Unexpected error.",
        "required": [
          "error"
        ]
      },
      "EntityLinkingResult": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentLinkedEntities"
            },
            "x-cadl-name": "TextAnalytics.DocumentLinkedEntities[]",
            "description": "Response by document."
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentError"
            },
            "x-cadl-name": "TextAnalytics.DocumentError[]",
            "description": "Errors by document id."
          },
          "statistics": {
            "$ref": "#/components/schemas/RequestStatistics",
            "description": "If showStats=true was specified in the request this field will contain information about the request payload."
          },
          "modelVersion": {
            "type": "string",
            "description": "This field indicates which model is used for scoring."
          }
        },
        "required": [
          "documents",
          "errors",
          "modelVersion"
        ]
      },
      "HealthcareJobState": {
        "type": "object",
        "properties": {
          "results": {
            "$ref": "#/components/schemas/HealthcareResult"
          }
        },
        "required": [
          "results"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/JobState"
          }
        ]
      },
      "LanguageBatchInput": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageInput"
            },
            "x-cadl-name": "TextAnalytics.LanguageInput[]"
          }
        },
        "required": [
          "documents"
        ]
      },
      "LanguageResult": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentLanguage"
            },
            "x-cadl-name": "TextAnalytics.DocumentLanguage[]",
            "description": "Response by document."
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentError"
            },
            "x-cadl-name": "TextAnalytics.DocumentError[]",
            "description": "Errors by document id."
          },
          "statistics": {
            "$ref": "#/components/schemas/RequestStatistics",
            "description": "If showStats=true was specified in the request this field will contain information about the request payload."
          },
          "modelVersion": {
            "type": "string",
            "description": "This field indicates which model is used for scoring."
          }
        },
        "required": [
          "documents",
          "errors",
          "modelVersion"
        ]
      },
      "PiiCategory": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "string",
            "enum": [
              "ABARoutingNumber",
              "ARNationalIdentityNumber",
              "AUBankAccountNumber",
              "AUDriversLicenseNumber",
              "AUMedicalAccountNumber",
              "AUPassportNumber",
              "AUTaxFileNumber",
              "AUBusinessNumber",
              "AUCompanyNumber",
              "ATIdentityCard",
              "ATTaxIdentificationNumber",
              "ATValueAddedTaxNumber",
              "AzureDocumentDBAuthKey",
              "AzureIAASDatabaseConnectionAndSQLString",
              "AzureIoTConnectionString",
              "AzurePublishSettingPassword",
              "AzureRedisCacheString",
              "AzureSAS",
              "AzureServiceBusString",
              "AzureStorageAccountKey",
              "AzureStorageAccountGeneric",
              "BENationalNumber",
              "BENationalNumberV2",
              "BEValueAddedTaxNumber",
              "BRCPFNumber",
              "BRLegalEntityNumber",
              "BRNationalIDRG",
              "BGUniformCivilNumber",
              "CABankAccountNumber",
              "CADriversLicenseNumber",
              "CAHealthServiceNumber",
              "CAPassportNumber",
              "CAPersonalHealthIdentification",
              "CASocialInsuranceNumber",
              "CLIdentityCardNumber",
              "CNResidentIdentityCardNumber",
              "CreditCardNumber",
              "HRIdentityCardNumber",
              "HRNationalIDNumber",
              "HRPersonalIdentificationNumber",
              "HRPersonalIdentificationOIBNumberV2",
              "CYIdentityCard",
              "CYTaxIdentificationNumber",
              "CZPersonalIdentityNumber",
              "CZPersonalIdentityV2",
              "DKPersonalIdentificationNumber",
              "DKPersonalIdentificationV2",
              "DrugEnforcementAgencyNumber",
              "EEPersonalIdentificationCode",
              "EUDebitCardNumber",
              "EUDriversLicenseNumber",
              "EUGPSCoordinates",
              "EUNationalIdentificationNumber",
              "EUPassportNumber",
              "EUSocialSecurityNumber",
              "EUTaxIdentificationNumber",
              "FIEuropeanHealthNumber",
              "FINationalID",
              "FINationalIDV2",
              "FIPassportNumber",
              "FRDriversLicenseNumber",
              "FRHealthInsuranceNumber",
              "FRNationalID",
              "FRPassportNumber",
              "FRSocialSecurityNumber",
              "FRTaxIdentificationNumber",
              "FRValueAddedTaxNumber",
              "DEDriversLicenseNumber",
              "DEPassportNumber",
              "DEIdentityCardNumber",
              "DETaxIdentificationNumber",
              "DEValueAddedNumber",
              "GRNationalIDCard",
              "GRNationalIDV2",
              "GRTaxIdentificationNumber",
              "HKIdentityCardNumber",
              "HUValueAddedNumber",
              "HUPersonalIdentificationNumber",
              "HUTaxIdentificationNumber",
              "INPermanentAccount",
              "INUniqueIdentificationNumber",
              "IDIdentityCardNumber",
              "InternationalBankingAccountNumber",
              "IEPersonalPublicServiceNumber",
              "IEPersonalPublicServiceNumberV2",
              "ILBankAccountNumber",
              "ILNationalID",
              "ITDriversLicenseNumber",
              "ITFiscalCode",
              "ITValueAddedTaxNumber",
              "JPBankAccountNumber",
              "JPDriversLicenseNumber",
              "JPPassportNumber",
              "JPResidentRegistrationNumber",
              "JPSocialInsuranceNumber",
              "JPMyNumberCorporate",
              "JPMyNumberPersonal",
              "JPResidenceCardNumber",
              "LVPersonalCode",
              "LTPersonalCode",
              "LUNationalIdentificationNumberNatural",
              "LUNationalIdentificationNumberNonNatural",
              "MYIdentityCardNumber",
              "MTIdentityCardNumber",
              "MTTaxIDNumber",
              "NLCitizensServiceNumber",
              "NLCitizensServiceNumberV2",
              "NLTaxIdentificationNumber",
              "NLValueAddedTaxNumber",
              "NZBankAccountNumber",
              "NZDriversLicenseNumber",
              "NZInlandRevenueNumber",
              "NZMinistryOfHealthNumber",
              "NZSocialWelfareNumber",
              "NOIdentityNumber",
              "PHUnifiedMultiPurposeIDNumber",
              "PLIdentityCard",
              "PLNationalID",
              "PLNationalIDV2",
              "PLPassportNumber",
              "PLTaxIdentificationNumber",
              "PLREGONNumber",
              "PTCitizenCardNumber",
              "PTCitizenCardNumberV2",
              "PTTaxIdentificationNumber",
              "ROPersonalNumericalCode",
              "RUPassportNumberDomestic",
              "RUPassportNumberInternational",
              "SANationalID",
              "SGNationalRegistrationIdentityCardNumber",
              "SKPersonalNumber",
              "SITaxIdentificationNumber",
              "SIUniqueMasterCitizenNumber",
              "ZAIdentificationNumber",
              "KRResidentRegistrationNumber",
              "ESDNI",
              "ESSocialSecurityNumber",
              "ESTaxIdentificationNumber",
              "SQLServerConnectionString",
              "SENationalID",
              "SENationalIDV2",
              "SEPassportNumber",
              "SETaxIdentificationNumber",
              "SWIFTCode",
              "CHSocialSecurityNumber",
              "TWNationalID",
              "TWPassportNumber",
              "TWResidentCertificate",
              "THPopulationIdentificationCode",
              "TRNationalIdentificationNumber",
              "UKDriversLicenseNumber",
              "UKElectoralRollNumber",
              "UKNationalHealthNumber",
              "UKNationalInsuranceNumber",
              "UKUniqueTaxpayerNumber",
              "USUKPassportNumber",
              "USBankAccountNumber",
              "USDriversLicenseNumber",
              "USIndividualTaxpayerIdentification",
              "USSocialSecurityNumber",
              "UAPassportNumberDomestic",
              "UAPassportNumberInternational",
              "Organization",
              "Email",
              "URL",
              "Age",
              "PhoneNumber",
              "IPAddress",
              "Date",
              "Person",
              "Address",
              "All",
              "Default"
            ]
          }
        ]
      },
      "PiiResult": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PiiDocumentEntities"
            },
            "x-cadl-name": "TextAnalytics.PiiDocumentEntities[]",
            "description": "Response by document."
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentError"
            },
            "x-cadl-name": "TextAnalytics.DocumentError[]",
            "description": "Errors by document id."
          },
          "statistics": {
            "$ref": "#/components/schemas/RequestStatistics",
            "description": "If showStats=true was specified in the request this field will contain information about the request payload."
          },
          "modelVersion": {
            "type": "string",
            "description": "This field indicates which model is used for scoring."
          }
        },
        "required": [
          "documents",
          "errors",
          "modelVersion"
        ]
      },
      "KeyPhraseResult": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentKeyPhrases"
            },
            "x-cadl-name": "TextAnalytics.DocumentKeyPhrases[]",
            "description": "Response by document."
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentError"
            },
            "x-cadl-name": "TextAnalytics.DocumentError[]",
            "description": "Errors by document id."
          },
          "statistics": {
            "$ref": "#/components/schemas/RequestStatistics",
            "description": "If showStats=true was specified in the request this field will contain information about the request payload."
          },
          "modelVersion": {
            "type": "string",
            "description": "This field indicates which model is used for scoring."
          }
        },
        "required": [
          "documents",
          "errors",
          "modelVersion"
        ]
      },
      "SentimentResult": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSentiment"
            },
            "x-cadl-name": "TextAnalytics.DocumentSentiment[]",
            "description": "Response by document."
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentError"
            },
            "x-cadl-name": "TextAnalytics.DocumentError[]",
            "description": "Errors by document id."
          },
          "statistics": {
            "$ref": "#/components/schemas/RequestStatistics",
            "description": "If showStats=true was specified in the request this field will contain information about the request payload."
          },
          "modelVersion": {
            "type": "string",
            "description": "This field indicates which model is used for scoring."
          }
        },
        "required": [
          "documents",
          "errors",
          "modelVersion"
        ]
      },
      "AnalyzeBatchInput": {
        "type": "object",
        "properties": {
          "analysisInput": {
            "$ref": "#/components/schemas/MultiLanguageBatchInput",
            "description": "The set of documents to process as part of this batch."
          },
          "displayName": {
            "type": "string",
            "description": "Optional display name for the analysis job."
          },
          "tasks": {
            "type": "object",
            "properties": {
              "entityRecognitionTasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitiesTask"
                },
                "x-cadl-name": "TextAnalytics.EntitiesTask[]"
              },
              "entityRecognitionPiiTasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PiiTask"
                },
                "x-cadl-name": "TextAnalytics.PiiTask[]"
              },
              "keyPhraseExtractionTasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/KeyPhraseTask"
                },
                "x-cadl-name": "TextAnalytics.KeyPhraseTask[]"
              },
              "entityLinkingTasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityLinkingTask"
                },
                "x-cadl-name": "TextAnalytics.EntityLinkingTask[]"
              },
              "sentimentAnalysisTasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SentimentTask"
                },
                "x-cadl-name": "TextAnalytics.SentimentTask[]"
              }
            },
            "description": "The set of tasks to execute on the input documents.\nCannot specify the same task more than once.",
            "x-cadl-name": "(anonymous model)"
          }
        },
        "required": [
          "analysisInput",
          "tasks"
        ]
      },
      "AnalyzeJobState": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "completed": {
            "type": "integer",
            "format": "int32"
          },
          "statistics": {
            "$ref": "#/components/schemas/RequestStatistics"
          },
          "tasks": {
            "type": "object",
            "properties": {
              "entityLinkingTasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntityLinkingTaskResult"
                },
                "x-cadl-name": "TextAnalytics.EntityLinkingTaskResult[]"
              },
              "entityRecognitionPiiTasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PiiTaskResult"
                },
                "x-cadl-name": "TextAnalytics.PiiTaskResult[]"
              },
              "entityRecognitionTasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EntitiesTaskResult"
                },
                "x-cadl-name": "TextAnalytics.EntitiesTaskResult[]"
              },
              "keyPhraseExtractionTasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/KeyPhraseTaskResult"
                },
                "x-cadl-name": "TextAnalytics.KeyPhraseTaskResult[]"
              },
              "sentimentAnalysisTasks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SentimentTaskResult"
                },
                "x-cadl-name": "TextAnalytics.SentimentTaskResult[]"
              }
            },
            "required": [
              "entityLinkingTasks",
              "entityRecognitionPiiTasks",
              "entityRecognitionTasks",
              "keyPhraseExtractionTasks",
              "sentimentAnalysisTasks"
            ],
            "x-cadl-name": "(anonymous model)"
          }
        },
        "description": "Analysis job status and metadata.",
        "required": [
          "completed",
          "tasks"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/JobState"
          }
        ]
      },
      "MultiLanguageInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique, non-empty document identifier."
          },
          "text": {
            "type": "string",
            "description": "The input text to process."
          },
          "language": {
            "type": "string",
            "description": "This is the 2 letter ISO 639-1 representation of a language. \n\nFor example, use \"en\" for English; \"es\" for Spanish etc. z,an\nIf not set, use \"en\" for English as default.\""
          }
        },
        "required": [
          "id",
          "text"
        ]
      },
      "DocumentEntities": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique, non-empty document identifier."
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warning"
            },
            "x-cadl-name": "TextAnalytics.Warning[]",
            "description": "Warnings encountered while processing document."
          },
          "statistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentStatistics"
            },
            "x-cadl-name": "TextAnalytics.DocumentStatistics[]",
            "description": "If showStats=true was specified in the request this field will contain information about the document payload."
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Entity"
            },
            "x-cadl-name": "TextAnalytics.Entity[]",
            "description": "Recognized entities in the document."
          }
        },
        "required": [
          "id",
          "warnings",
          "statistics",
          "entities"
        ]
      },
      "DocumentError": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Document id."
          },
          "error": {
            "$ref": "#/components/schemas/Error",
            "description": "Document error."
          }
        },
        "required": [
          "id",
          "error"
        ]
      },
      "RequestStatistics": {
        "type": "object",
        "properties": {
          "documentsCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of documents submitted in the request."
          },
          "validDocumentsCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of valid documents. This excludes empty, over-size limit or non-supported languages documents."
          },
          "erroneousDocumentsCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of invalid documents. This includes empty, over-size limit or non-supported languages documents."
          },
          "transactionsCount": {
            "type": "integer",
            "format": "int64",
            "description": "Number of transactions for the request."
          }
        },
        "required": [
          "documentsCount",
          "validDocumentsCount",
          "erroneousDocumentsCount",
          "transactionsCount"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message."
          },
          "code": {
            "$ref": "#/components/schemas/ErrorCode",
            "description": "Error code."
          },
          "details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Error details."
          },
          "target": {
            "type": "string",
            "description": "Error target."
          },
          "innererror": {
            "$ref": "#/components/schemas/InnerError",
            "description": "Inner error contains more specific information."
          }
        },
        "required": [
          "message",
          "code"
        ]
      },
      "DocumentLinkedEntities": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique, non-empty document identifier."
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warning"
            },
            "x-cadl-name": "TextAnalytics.Warning[]",
            "description": "Warnings encountered while processing document."
          },
          "statistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentStatistics"
            },
            "x-cadl-name": "TextAnalytics.DocumentStatistics[]",
            "description": "If showStats=true was specified in the request this field will contain information about the document payload."
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedEntity"
            },
            "x-cadl-name": "TextAnalytics.LinkedEntity[]",
            "description": "Recognized well known entities in the document."
          }
        },
        "required": [
          "id",
          "warnings",
          "statistics",
          "entities"
        ]
      },
      "HealthcareResult": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentHealthcareEntities"
            },
            "x-cadl-name": "TextAnalytics.DocumentHealthcareEntities[]",
            "description": "Response by document."
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentError"
            },
            "x-cadl-name": "TextAnalytics.DocumentError[]",
            "description": "Errors by document id."
          },
          "statistics": {
            "$ref": "#/components/schemas/RequestStatistics",
            "description": "If showStats=true was specified in the request this field will contain information about the request payload."
          },
          "modelVersion": {
            "type": "string",
            "description": "This field indicates which model is used for scoring."
          }
        },
        "required": [
          "documents",
          "errors",
          "modelVersion"
        ]
      },
      "JobState": {
        "type": "object",
        "properties": {
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "expirationDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdateDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "jobId": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/State"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "x-cadl-name": "TextAnalytics.Error[]"
          },
          "@nextLink": {
            "type": "string"
          }
        },
        "required": [
          "createdDateTime",
          "expirationDateTime",
          "lastUpdateDateTime",
          "jobId",
          "status",
          "@nextLink"
        ]
      },
      "LanguageInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique, non-empty document identifier."
          },
          "text": {
            "type": "string"
          },
          "countryHint": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "text"
        ]
      },
      "DocumentLanguage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique, non-empty document identifier."
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warning"
            },
            "x-cadl-name": "TextAnalytics.Warning[]",
            "description": "Warnings encountered while processing document."
          },
          "statistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentStatistics"
            },
            "x-cadl-name": "TextAnalytics.DocumentStatistics[]",
            "description": "If showStats=true was specified in the request this field will contain information about the document payload."
          },
          "detectedLanguage": {
            "$ref": "#/components/schemas/DetectedLanguage",
            "description": "Detected language."
          }
        },
        "required": [
          "id",
          "warnings",
          "statistics",
          "detectedLanguage"
        ]
      },
      "PiiDocumentEntities": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique, non-empty document identifier."
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warning"
            },
            "x-cadl-name": "TextAnalytics.Warning[]",
            "description": "Warnings encountered while processing document."
          },
          "statistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentStatistics"
            },
            "x-cadl-name": "TextAnalytics.DocumentStatistics[]",
            "description": "If showStats=true was specified in the request this field will contain information about the document payload."
          },
          "redactedText": {
            "type": "string"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Entity"
            },
            "x-cadl-name": "TextAnalytics.Entity[]"
          }
        },
        "required": [
          "id",
          "warnings",
          "statistics",
          "redactedText",
          "entities"
        ]
      },
      "DocumentKeyPhrases": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique, non-empty document identifier."
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warning"
            },
            "x-cadl-name": "TextAnalytics.Warning[]",
            "description": "Warnings encountered while processing document."
          },
          "statistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentStatistics"
            },
            "x-cadl-name": "TextAnalytics.DocumentStatistics[]",
            "description": "If showStats=true was specified in the request this field will contain information about the document payload."
          },
          "keyPhrases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-cadl-name": "Cadl.string[]",
            "description": "A list of representative words or phrases.\n\nThe number of key phrases returned is proportional to the number of words in the input document."
          }
        },
        "required": [
          "id",
          "warnings",
          "statistics",
          "keyPhrases"
        ]
      },
      "DocumentSentiment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique, non-empty document identifier."
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warning"
            },
            "x-cadl-name": "TextAnalytics.Warning[]",
            "description": "Warnings encountered while processing document."
          },
          "statistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentStatistics"
            },
            "x-cadl-name": "TextAnalytics.DocumentStatistics[]",
            "description": "If showStats=true was specified in the request this field will contain information about the document payload."
          },
          "sentiment": {
            "$ref": "#/components/schemas/DocumentSentimentValue",
            "description": "Predicted sentiment for document."
          },
          "sentences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SentenceSentiment"
            },
            "x-cadl-name": "TextAnalytics.SentenceSentiment[]",
            "description": "Sentence level sentiment analysis."
          },
          "confidenceScores": {
            "$ref": "#/components/schemas/SentimentConfidenceScorePerLabel",
            "description": "Document level sentiment confidence scores between 0 and 1 for each sentiment class."
          }
        },
        "required": [
          "id",
          "warnings",
          "statistics",
          "sentiment",
          "sentences",
          "confidenceScores"
        ]
      },
      "EntitiesTask": {
        "type": "object",
        "properties": {
          "taskName": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "model-version": {
                "type": "string",
                "description": "This value indicates which model will be used for scoring.\nIf a model-version is not specified, the API should default to the latest, non-preview version.",
                "default": "latest"
              },
              "loggingOptOut": {
                "type": "boolean",
                "description": "If set to true, you opt-out of having your text input logged for troubleshooting.\n\nBy default, Text Analytics logs your input text for 48 hours, solely to allow for\ntroubleshooting issues in providing you with the Text Analytics natural language\nprocessing functions. Setting this parameter to true disables input logging and\nmay limit our ability to remediate issues that occur. Please see Cognitive Services\nCompliance and Privacy notes at https://aka.ms/cs-compliance for additional details,\nand Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai."
              },
              "stringIndexType": {
                "$ref": "#/components/schemas/StringIndexType",
                "description": "Specifies the method used to interpret string offsets.\n\nDefaults to grapheme clusters according to Unicode v8.0.0.\nFor additional information see https://aka.ms/text-analytics-offsets"
              }
            },
            "x-cadl-name": "(anonymous model)_TextAnalytics.EntitiesParameters"
          }
        },
        "required": [
          "parameters"
        ]
      },
      "PiiTask": {
        "type": "object",
        "properties": {
          "taskName": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "model-version": {
                "type": "string",
                "description": "This value indicates which model will be used for scoring.\nIf a model-version is not specified, the API should default to the latest, non-preview version.",
                "default": "latest"
              },
              "loggingOptOut": {
                "type": "boolean",
                "description": "If set to true, you opt-out of having your text input logged for troubleshooting.\n\nBy default, Text Analytics logs your input text for 48 hours, solely to allow for\ntroubleshooting issues in providing you with the Text Analytics natural language\nprocessing functions. Setting this parameter to true disables input logging and\nmay limit our ability to remediate issues that occur. Please see Cognitive Services\nCompliance and Privacy notes at https://aka.ms/cs-compliance for additional details,\nand Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai."
              },
              "stringIndexType": {
                "$ref": "#/components/schemas/StringIndexType",
                "description": "Specifies the method used to interpret string offsets.\n\nDefaults to grapheme clusters according to Unicode v8.0.0.\nFor additional information see https://aka.ms/text-analytics-offsets"
              },
              "domain": {
                "type": "string",
                "enum": [
                  "phi",
                  "none"
                ],
                "x-cadl-name": "phi | none",
                "description": "If specified, will set the PII domain to include only a subset of the entity categories."
              },
              "piiCategories": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PiiCategory"
                },
                "x-cadl-name": "TextAnalytics.PiiCategory[]",
                "description": "Describes the PII categories to return."
              }
            },
            "x-cadl-name": "(anonymous model)_TextAnalytics.PiiParameters"
          }
        },
        "required": [
          "parameters"
        ]
      },
      "KeyPhraseTask": {
        "type": "object",
        "properties": {
          "taskName": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "model-version": {
                "type": "string",
                "description": "This value indicates which model will be used for scoring.\nIf a model-version is not specified, the API should default to the latest, non-preview version.",
                "default": "latest"
              },
              "loggingOptOut": {
                "type": "boolean",
                "description": "If set to true, you opt-out of having your text input logged for troubleshooting.\n\nBy default, Text Analytics logs your input text for 48 hours, solely to allow for\ntroubleshooting issues in providing you with the Text Analytics natural language\nprocessing functions. Setting this parameter to true disables input logging and\nmay limit our ability to remediate issues that occur. Please see Cognitive Services\nCompliance and Privacy notes at https://aka.ms/cs-compliance for additional details,\nand Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai."
              }
            },
            "x-cadl-name": "(anonymous model)_TextAnalytics.KeyPhraseParameters"
          }
        },
        "required": [
          "parameters"
        ]
      },
      "EntityLinkingTask": {
        "type": "object",
        "properties": {
          "taskName": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "model-version": {
                "type": "string",
                "description": "This value indicates which model will be used for scoring.\nIf a model-version is not specified, the API should default to the latest, non-preview version.",
                "default": "latest"
              },
              "loggingOptOut": {
                "type": "boolean",
                "description": "If set to true, you opt-out of having your text input logged for troubleshooting.\n\nBy default, Text Analytics logs your input text for 48 hours, solely to allow for\ntroubleshooting issues in providing you with the Text Analytics natural language\nprocessing functions. Setting this parameter to true disables input logging and\nmay limit our ability to remediate issues that occur. Please see Cognitive Services\nCompliance and Privacy notes at https://aka.ms/cs-compliance for additional details,\nand Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai."
              },
              "stringIndexType": {
                "$ref": "#/components/schemas/StringIndexType",
                "description": "Specifies the method used to interpret string offsets.\n\nDefaults to grapheme clusters according to Unicode v8.0.0.\nFor additional information see https://aka.ms/text-analytics-offsets"
              }
            },
            "x-cadl-name": "(anonymous model)_TextAnalytics.EntityLinkingParameters"
          }
        },
        "required": [
          "parameters"
        ]
      },
      "SentimentTask": {
        "type": "object",
        "properties": {
          "taskName": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "properties": {
              "model-version": {
                "type": "string",
                "description": "This value indicates which model will be used for scoring.\nIf a model-version is not specified, the API should default to the latest, non-preview version.",
                "default": "latest"
              },
              "loggingOptOut": {
                "type": "boolean",
                "description": "If set to true, you opt-out of having your text input logged for troubleshooting.\n\nBy default, Text Analytics logs your input text for 48 hours, solely to allow for\ntroubleshooting issues in providing you with the Text Analytics natural language\nprocessing functions. Setting this parameter to true disables input logging and\nmay limit our ability to remediate issues that occur. Please see Cognitive Services\nCompliance and Privacy notes at https://aka.ms/cs-compliance for additional details,\nand Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai."
              },
              "stringIndexType": {
                "$ref": "#/components/schemas/StringIndexType",
                "description": "Specifies the method used to interpret string offsets.\n\nDefaults to grapheme clusters according to Unicode v8.0.0.\nFor additional information see https://aka.ms/text-analytics-offsets"
              },
              "opinionMining": {
                "type": "boolean",
                "description": "If set to true, response will contain not only sentiment prediction but also opinion \nmining (aspect-based sentiment analysis) results.",
                "default": false
              }
            },
            "x-cadl-name": "(anonymous model)_TextAnalytics.SentimentParameters"
          }
        },
        "required": [
          "parameters"
        ]
      },
      "EntityLinkingTaskResult": {
        "type": "object",
        "properties": {
          "results": {
            "$ref": "#/components/schemas/EntityLinkingResult"
          }
        },
        "required": [
          "results"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskState"
          }
        ]
      },
      "PiiTaskResult": {
        "type": "object",
        "properties": {
          "results": {
            "type": "object",
            "properties": {},
            "x-cadl-name": "(anonymous model)"
          }
        },
        "required": [
          "results"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskState"
          }
        ]
      },
      "EntitiesTaskResult": {
        "type": "object",
        "properties": {
          "results": {
            "$ref": "#/components/schemas/EntitiesResult"
          }
        },
        "required": [
          "results"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskState"
          }
        ]
      },
      "KeyPhraseTaskResult": {
        "type": "object",
        "properties": {
          "results": {
            "$ref": "#/components/schemas/KeyPhraseResult"
          }
        },
        "required": [
          "results"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskState"
          }
        ]
      },
      "SentimentTaskResult": {
        "type": "object",
        "properties": {
          "results": {
            "$ref": "#/components/schemas/SentimentResult"
          }
        },
        "required": [
          "results"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/TaskState"
          }
        ]
      },
      "Warning": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/WarningCode",
            "description": "Warning code."
          },
          "message": {
            "type": "string",
            "description": "Warning message."
          },
          "targetRef": {
            "type": "string",
            "description": "A JSON pointer reference indicating the target object."
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "DocumentStatistics": {
        "type": "object",
        "properties": {
          "charactersCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of text elements recognized in the document."
          },
          "transactionsCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of transactions for the document."
          }
        },
        "required": [
          "charactersCount",
          "transactionsCount"
        ]
      },
      "Entity": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Entity text as appears in the request."
          },
          "category": {
            "type": "string",
            "description": "Entity type."
          },
          "subcategory": {
            "type": "string",
            "description": "Entity sub type."
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Start position for the entity text. \nUse of different 'stringIndexType' values can affect the offset returned."
          },
          "length": {
            "type": "integer",
            "format": "int32",
            "description": "Length for the entity text. \nUse of different 'stringIndexType' values can affect the length returned."
          },
          "confidenceScore": {
            "type": "number",
            "format": "double",
            "description": "Confidence score between 0 and 1 of the extracted entity."
          }
        },
        "required": [
          "text",
          "category",
          "offset",
          "length",
          "confidenceScore"
        ]
      },
      "ErrorCode": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "string",
            "enum": [
              "InvalidRequest",
              "InvalidArgument",
              "InternalServerError",
              "ServiceUnavailable",
              "NotFound"
            ]
          }
        ]
      },
      "InnerError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message."
          },
          "code": {
            "$ref": "#/components/schemas/InnerErrorCode",
            "description": "Error code."
          },
          "details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Error details."
          },
          "target": {
            "type": "string",
            "description": "Error target."
          },
          "innererror": {
            "$ref": "#/components/schemas/InnerError",
            "description": "Inner error contains more specific information."
          }
        },
        "required": [
          "message",
          "code"
        ]
      },
      "LinkedEntity": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Entity Linking formal name."
          },
          "matches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Match"
            },
            "x-cadl-name": "TextAnalytics.Match[]",
            "description": "List of instances this entity appears in the text."
          },
          "language": {
            "type": "string",
            "description": "Language used in the data source."
          },
          "id": {
            "type": "string",
            "description": "Unique identifier of the recognized entity from the data source."
          },
          "url": {
            "type": "string",
            "description": "URL for the entity's page from the data source."
          },
          "dataSource": {
            "type": "string",
            "description": "Data source used to extract entity linking, such as Wiki/Bing etc."
          },
          "bingId": {
            "type": "string",
            "description": "Bing Entity Search API unique identifier of the recognized entity."
          }
        },
        "required": [
          "name",
          "matches",
          "language",
          "url",
          "dataSource"
        ]
      },
      "DocumentHealthcareEntities": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique, non-empty document identifier."
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Warning"
            },
            "x-cadl-name": "TextAnalytics.Warning[]",
            "description": "Warnings encountered while processing document."
          },
          "statistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentStatistics"
            },
            "x-cadl-name": "TextAnalytics.DocumentStatistics[]",
            "description": "If showStats=true was specified in the request this field will contain information about the document payload."
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HealthcareEntity"
            },
            "x-cadl-name": "TextAnalytics.HealthcareEntity[]",
            "description": "Healthcare entities."
          },
          "relations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HealthcareRelation"
            },
            "x-cadl-name": "TextAnalytics.HealthcareRelation[]",
            "description": "Healthcare entity relations."
          }
        },
        "required": [
          "id",
          "warnings",
          "statistics",
          "entities",
          "relations"
        ]
      },
      "State": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "string",
            "enum": [
              "notStarted",
              "running",
              "succeeded",
              "failed",
              "cancelled",
              "cancelling",
              "rejected"
            ]
          }
        ]
      },
      "DetectedLanguage": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Long name of a detected language (e.g. English, French)."
          },
          "iso6391Name": {
            "type": "string",
            "description": "A two letter representation of the detected language according to the ISO 639-1 \nstandard (e.g. en, fr)."
          },
          "confidenceScore": {
            "type": "number",
            "format": "double",
            "description": "A confidence score between 0 and 1. \n\nScores close to 1 indicate 100% certainty that the identified language is true."
          }
        },
        "required": [
          "name",
          "iso6391Name",
          "confidenceScore"
        ]
      },
      "DocumentSentimentValue": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "string",
            "enum": [
              "positive",
              "neutral",
              "negative",
              "mixed"
            ]
          }
        ]
      },
      "SentenceSentiment": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The sentence text."
          },
          "sentiment": {
            "$ref": "#/components/schemas/SentenceSentimentValue",
            "description": "The predicted sentiment for the sentence."
          },
          "confidenceScores": {
            "$ref": "#/components/schemas/SentimentConfidenceScorePerLabel",
            "description": "The sentiment confidence score between 0 and 1 for the sentence for all classes."
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "The sentence offset from the start of the document."
          },
          "length": {
            "type": "integer",
            "format": "int32",
            "description": "The length of the sentence."
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SentenceTarget"
            },
            "x-cadl-name": "TextAnalytics.SentenceTarget[]",
            "description": "The array of sentence targets for the sentence."
          }
        },
        "required": [
          "text",
          "sentiment",
          "confidenceScores",
          "offset",
          "length"
        ]
      },
      "SentimentConfidenceScorePerLabel": {
        "type": "object",
        "properties": {
          "positive": {
            "type": "number",
            "format": "double"
          },
          "negative": {
            "type": "number",
            "format": "double"
          },
          "neutral": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "positive",
          "negative",
          "neutral"
        ]
      },
      "StringIndexType": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "string",
            "enum": [
              "TextElement_v8",
              "UnicodeCodePoint",
              "Utf16CodeUnit"
            ]
          }
        ]
      },
      "TaskState": {
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "taskName": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/State"
          }
        },
        "required": [
          "lastUpdateDateTime",
          "taskName",
          "status"
        ]
      },
      "WarningCode": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "string",
            "enum": [
              "LongWordsInDocument",
              "DocumentTruncated"
            ]
          }
        ]
      },
      "InnerErrorCode": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "string",
            "enum": [
              "InvalidParameterValue",
              "InvalidRequestBodyFormat",
              "EmptyRequest",
              "MissingInputRecords",
              "InvalidDocument",
              "ModelVersionIncorrect",
              "InvalidDocumentBatch",
              "UnsupportedLanguageCode",
              "InvalidCountryHint"
            ]
          }
        ]
      },
      "Match": {
        "type": "object",
        "properties": {
          "confidenceScore": {
            "type": "number",
            "format": "double",
            "description": "If a well known item is recognized, a decimal number denoting the confidence level between 0 and 1 will be returned."
          },
          "text": {
            "type": "string",
            "description": "Entity text as appears in the request."
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Start position for the entity match text"
          },
          "length": {
            "type": "integer",
            "format": "int32",
            "description": "Length for the entity match text."
          }
        },
        "required": [
          "confidenceScore",
          "text",
          "offset",
          "length"
        ]
      },
      "HealthcareEntity": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Entity text as appears in the request."
          },
          "category": {
            "$ref": "#/components/schemas/HealthcareEntityCategory",
            "description": "Healthcare Entity Category."
          },
          "subcategory": {
            "type": "string",
            "description": "Entity sub type"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned."
          },
          "length": {
            "type": "integer",
            "format": "int32",
            "description": "Length for the entity text. Use of different 'stringIndexType' values can affect the length returned."
          },
          "confidenceScore": {
            "type": "number",
            "format": "double",
            "description": "Confidence score between 0 and 1 of the extracted entity."
          },
          "assertion": {
            "$ref": "#/components/schemas/HealthcareAssertion"
          },
          "name": {
            "type": "string",
            "description": "Preferred name for the entity. Example: 'histologically' would have a 'name' of 'histologic'."
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HealthcareEntityLink"
            },
            "x-cadl-name": "TextAnalytics.HealthcareEntityLink[]",
            "description": "Entity references in known data sources."
          }
        },
        "required": [
          "text",
          "category",
          "subcategory",
          "offset",
          "length",
          "confidenceScore"
        ]
      },
      "HealthcareRelation": {
        "type": "object",
        "properties": {
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HealthcareRelationEntity"
            },
            "x-cadl-name": "TextAnalytics.HealthcareRelationEntity[]",
            "description": "The entities in the relation."
          },
          "relationType": {
            "$ref": "#/components/schemas/HealthcareRelationType",
            "description": "Type of relation."
          }
        },
        "description": "Every relation is an entity graph of a certain relationType, where all entities\nare connected and have specific roles within the relation context.",
        "required": [
          "entities",
          "relationType"
        ]
      },
      "SentenceSentimentValue": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "string",
            "enum": [
              "positive",
              "neutral",
              "negative"
            ]
          }
        ]
      },
      "SentenceTarget": {
        "type": "object",
        "properties": {
          "sentiment": {
            "$ref": "#/components/schemas/TokenSentimentValue",
            "description": "Targeted sentiment in the sentence."
          },
          "confidenceScores": {
            "$ref": "#/components/schemas/TargetConfidenceScorePerLabel",
            "description": "Target sentiment confidence scores for the target in the sentence."
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "The target offset from the start of the sentence."
          },
          "length": {
            "type": "integer",
            "format": "int32",
            "description": "The length of the target."
          },
          "text": {
            "type": "string",
            "description": "The target text detected."
          },
          "relations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetRelation"
            },
            "x-cadl-name": "TextAnalytics.TargetRelation[]",
            "description": "The array of either assessment or target objects which is related to the target."
          }
        },
        "required": [
          "sentiment",
          "confidenceScores",
          "offset",
          "length",
          "text",
          "relations"
        ]
      },
      "HealthcareEntityCategory": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "string",
            "enum": [
              "BODY_STRUCTURE",
              "AGE",
              "GENDER",
              "EXAMINATION_NAME",
              "DATE",
              "DIRECTION",
              "FREQUENCY",
              "MEASUREMENT_VALUE",
              "MEASUREMENT_UNIT",
              "RELATIONAL_OPERATOR",
              "TIME",
              "GENE_OR_PROTEIN",
              "VARIANT",
              "ADMINISTRATIVE_EVENT",
              "CARE_ENVIRONMENT",
              "HEALTHCARE_PROFESSION",
              "DIAGNOSIS",
              "SYMPTOM_OR_SIGN",
              "CONDITION_QUALIFIER",
              "MEDICATION_CLASS",
              "MEDICATION_NAME",
              "DOSAGE",
              "MEDICATION_FORM",
              "MEDICATION_ROUTE",
              "FAMILY_RELATION",
              "TREATMENT_NAME"
            ]
          }
        ]
      },
      "HealthcareAssertion": {
        "type": "object",
        "properties": {
          "conditionality": {
            "$ref": "#/components/schemas/Conditionality",
            "description": "Describes any conditionality on the entity."
          },
          "certainty": {
            "$ref": "#/components/schemas/Certainty",
            "description": "Describes the entities certainty and polarity."
          },
          "association": {
            "$ref": "#/components/schemas/Association",
            "description": "Describes if the entity is the subject of the text or if it describes someone else."
          }
        }
      },
      "HealthcareEntityLink": {
        "type": "object",
        "properties": {
          "dataSource": {
            "type": "string",
            "description": "Entity Catalog. Examples include: UMLS, CHV, MSH, etc."
          },
          "id": {
            "type": "string",
            "description": "Entity id in the given source catalog."
          }
        },
        "required": [
          "dataSource",
          "id"
        ]
      },
      "HealthcareRelationEntity": {
        "type": "object",
        "properties": {
          "ref": {
            "type": "string",
            "description": "Reference link object, using a JSON pointer RFC 6901 (URI Fragment Identifier Representation), pointing to the entity ."
          },
          "role": {
            "type": "string",
            "description": "Role of entity in the relationship.    \n\nFor example: 'CD20-positive diffuse large B-cell lymphoma' has the following entities with their \nroles in parenthesis: CD20 (GeneOrProtein), Positive (Expression), diffuse large B-cell lymphoma \n(Diagnosis)."
          }
        },
        "required": [
          "ref",
          "role"
        ]
      },
      "HealthcareRelationType": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "string",
            "enum": [
              "Abbreviation",
              "DirectionOfBodyStructure",
              "DirectionOfCondition",
              "DirectionOfExamination",
              "DirectionOfTreatment",
              "DosageOfMedication",
              "FormOfMedication",
              "FrequencyOfMedication",
              "FrequencyOfTreatment",
              "QualifierOfCondition",
              "RelationOfExamination",
              "RouteOfMedication",
              "TimeOfCondition",
              "TimeOfEvent",
              "TimeOfExamination",
              "TimeOfMedication",
              "TimeOfTreatment",
              "UnitOfCondition",
              "UnitOfExamination",
              "ValueOfCondition",
              "ValueOfExamination"
            ]
          }
        ]
      },
      "TokenSentimentValue": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "string",
            "enum": [
              "positive",
              "neutral",
              "mixed"
            ]
          }
        ]
      },
      "TargetConfidenceScorePerLabel": {
        "type": "object",
        "properties": {
          "positive": {
            "type": "number",
            "format": "double"
          },
          "negative": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "positive",
          "negative"
        ]
      },
      "TargetRelation": {
        "type": "object",
        "properties": {
          "relationType": {
            "$ref": "#/components/schemas/TargetRelationType",
            "description": "The type related to the target."
          },
          "ref": {
            "type": "string",
            "description": "The JSON pointer indicating the linked object."
          }
        },
        "required": [
          "relationType",
          "ref"
        ]
      },
      "Conditionality": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "string",
            "enum": [
              "hypothetical",
              "conditional"
            ]
          }
        ]
      },
      "Certainty": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "string",
            "enum": [
              "positive",
              "positivePossible",
              "neutralPossible",
              "negativePossible",
              "negative"
            ]
          }
        ]
      },
      "Association": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "string",
            "enum": [
              "subject",
              "other"
            ]
          }
        ]
      },
      "TargetRelationType": {
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "string",
            "enum": [
              "assessment",
              "target"
            ]
          }
        ]
      }
    }
  }
}
