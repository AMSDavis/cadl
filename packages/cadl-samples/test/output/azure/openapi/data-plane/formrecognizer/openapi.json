{
  "openapi": "3.0.0",
  "info": {
    "title": "Form Recognizer",
    "version": "2021-09-30-preview"
  },
  "tags": [
    {
      "name": "Management"
    },
    {
      "name": "Analysis"
    },
    {
      "name": "Creation"
    },
    {
      "name": "Operation"
    }
  ],
  "paths": {
    "/info": {
      "get": {
        "operationId": "Management_info",
        "parameters": [],
        "responses": {
          "200": {
            "description": "General information regarding the current resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInfoResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Management"
        ]
      }
    },
    "/:analyze/{modelId}": {
      "post": {
        "operationId": "Analysis_analyzeDocument",
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelSummary.modelId"
          },
          {
            "name": "pages",
            "in": "query",
            "required": true,
            "description": "List of 1-based page numbers to analyze. Ex. \"1-3,5,7-9\"",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "locale",
            "in": "query",
            "required": true,
            "description": "Locale hint for text recognition and document analysis. Value may contain only the language code (ex. \"en\", \"fr\") or BCP 47 language tag (ex. \"en-US\").",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stringIndexType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Method used to compute string offset and length.",
              "enum": [
                "textElements",
                "unicodeCodePoint",
                "utf16CodeUnit"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "operation-location": {
                "description": "Operation result URL.",
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Analysis"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "byte"
              }
            },
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/pdf": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "image/jpeg": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "image/png": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "image/tiff": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "image/bmp": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        }
      }
    },
    "/analyzeResults/{resultId}/{modelId}": {
      "get": {
        "operationId": "Analysis_getAnalyzeResult",
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelSummary.modelId"
          },
          {
            "name": "resultId",
            "in": "path",
            "required": true,
            "description": "Analyze operation result ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status and result of the analyze operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalyzeResultOperation"
                }
              }
            }
          }
        },
        "tags": [
          "Analysis"
        ]
      }
    },
    "/documentModels:build": {
      "post": {
        "operationId": "Creation_buildModel",
        "description": "Builds a custom document analysis model.",
        "parameters": [],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "operation-location": {
                "description": "Operation result URL.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Creation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuildDocumentModelRequest"
              }
            }
          }
        }
      }
    },
    "/documentModels:compose": {
      "post": {
        "operationId": "Creation_composeModel",
        "description": "Creates a new model from document types of existing models.",
        "parameters": [],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "operation-location": {
                "description": "Operation result URL.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Creation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComposeDocumentModelRequest"
              }
            }
          }
        }
      }
    },
    "/documentModels:authorizeCopy": {
      "post": {
        "operationId": "Creation_authorizeCopy",
        "description": "Generates authorization to copy a model to this location with specified modelId and optional description.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Authorization to copy a model to the specified target resource and modelId.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CopyAuthorization"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Creation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizeCopyRequest"
              }
            }
          }
        }
      }
    },
    "/documentModels:{modelId}:copyTo": {
      "post": {
        "operationId": "Creation_copyTo",
        "description": "Copies model to the target resource, region, and modelId.",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "operation-location": {
                "description": "Operation result URL.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Creation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyAuthorization"
              }
            }
          }
        }
      }
    },
    "/operations": {
      "get": {
        "operationId": "Operations_listOperations",
        "description": "Lists all operations.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List Operations response object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOperationsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Operation"
        ]
      }
    },
    "/operations/{operationId}": {
      "get": {
        "operationId": "Operations_getOperation",
        "description": "Gets operation info.",
        "parameters": [
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOperationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Operation"
        ]
      }
    },
    "/documentModels": {
      "post": {
        "operationId": "DocumentModels_create",
        "description": "Creates a new instance of the resource.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelSummary"
                }
              }
            }
          },
          "201": {
            "description": "Resource create operation completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelSummary"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Management"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelSummary"
              }
            }
          }
        }
      },
      "get": {
        "operationId": "DocumentModels_list",
        "description": "Lists all instances of the resource.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Paged response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cadl.Rest.Resource.Page_ModelSummary"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Management"
        ]
      }
    },
    "/documentModels/{modelId}": {
      "get": {
        "operationId": "DocumentModels_get",
        "description": "Gets an instance of the resource.",
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelSummary.modelId"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelSummary"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Management"
        ]
      },
      "delete": {
        "operationId": "DocumentModels_delete",
        "description": "Deletes an existing instance of the resource.",
        "parameters": [
          {
            "$ref": "#/components/parameters/ModelSummary.modelId"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "An unexpected error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Management"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "ModelSummary.modelId": {
        "name": "modelId",
        "in": "path",
        "required": true,
        "description": "Unique model name",
        "schema": {
          "type": "string",
          "pattern": "[a-zA-Z0-9][a-zA-Z0-9._~-]{1,63}"
        }
      }
    },
    "schemas": {
      "GetInfoResponse": {
        "type": "object",
        "properties": {
          "customDocumentModels": {
            "$ref": "#/components/schemas/CustomDocumentModelsInfo",
            "description": "Info regarding custom document models."
          }
        },
        "description": "General information regarding the current resource.",
        "required": [
          "customDocumentModels"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error"
          }
        },
        "required": [
          "error"
        ]
      },
      "AnalyzeResultOperation": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/AnalyzeResultOperationStatus",
            "description": "Operation status."
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time (UTC) when the analyze operation was submitted."
          },
          "lastUpdatedDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time (UTC) when the status was last updated."
          },
          "error": {
            "$ref": "#/components/schemas/Error",
            "description": "Encountered error during document analysis."
          },
          "analyzeResult": {
            "$ref": "#/components/schemas/AnalyzeResult",
            "description": "Document analysis result."
          }
        },
        "description": "Status and result of the analyze operation.",
        "required": [
          "status",
          "createdDateTime",
          "lastUpdatedDateTime",
          "error",
          "analyzeResult"
        ]
      },
      "BuildDocumentModelRequest": {
        "type": "object",
        "properties": {
          "modelId": {
            "$ref": "#/components/schemas/ModelId",
            "description": "Model Id"
          },
          "description": {
            "$ref": "#/components/schemas/ModelDescription",
            "description": "Model description"
          },
          "azureBlobSource": {
            "$ref": "#/components/schemas/AzureBlobContentSource",
            "description": "Azure Blob Storage location containing the training data."
          }
        },
        "description": "Request body to build a new custom model.",
        "required": [
          "modelId"
        ]
      },
      "ComposeDocumentModelRequest": {
        "type": "object",
        "properties": {
          "modelId": {
            "$ref": "#/components/schemas/ModelId",
            "description": "Model Id"
          },
          "description": {
            "$ref": "#/components/schemas/ModelDescription",
            "description": "Model description"
          },
          "componentModels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentModelInfo"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.ComponentModelInfo[]",
            "description": "List of component models to compose."
          }
        },
        "description": "Request body to create a composed model from component models.",
        "required": [
          "modelId",
          "componentModels"
        ]
      },
      "AuthorizeCopyRequest": {
        "type": "object",
        "properties": {
          "modelId": {
            "$ref": "#/components/schemas/ModelId",
            "description": "Model Id"
          },
          "description": {
            "$ref": "#/components/schemas/ModelDescription",
            "description": "Model description"
          }
        },
        "description": "Request body to authorize model copy.",
        "required": [
          "modelId"
        ]
      },
      "CopyAuthorization": {
        "type": "object",
        "properties": {
          "targetResourceId": {
            "type": "string",
            "description": "ID of the target Azure resource where the model should be copied to."
          },
          "targetResourceRegion": {
            "type": "string",
            "description": "Location of the target Azure resource where the model should be copied to."
          },
          "targetModelId": {
            "$ref": "#/components/schemas/ModelId",
            "description": "Identifier of the target model."
          },
          "targetModelLocation": {
            "type": "string",
            "description": "URL of the copied model in the target account."
          },
          "accessToken": {
            "type": "string",
            "description": "Token used to authorize the request."
          },
          "expirationDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date/time when the access token expires."
          }
        },
        "description": "Authorization to copy a model to the specified target resource and modelId.",
        "required": [
          "targetResourceId",
          "targetResourceRegion",
          "targetModelId",
          "targetModelLocation",
          "accessToken",
          "expirationDateTime"
        ]
      },
      "GetOperationsResponse": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/OperationInfo",
            "description": "List of operations."
          },
          "nextLink": {
            "type": "string",
            "description": "Link to the next page of operations."
          }
        },
        "description": "List Operations response object.",
        "required": [
          "value",
          "nextLink"
        ]
      },
      "GetOperationResponse": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Error",
            "description": "Encountered error."
          },
          "result": {
            "type": "object",
            "properties": {},
            "description": "Operation result upon success.",
            "x-cadl-name": "(anonymous model)"
          }
        },
        "required": [
          "result"
        ],
        "allOf": [
          {
            "$ref": "#/components/schemas/OperationInfo"
          }
        ]
      },
      "ModelSummary": {
        "type": "object",
        "properties": {
          "modelId": {
            "$ref": "#/components/schemas/ModelId",
            "description": "Unique model name"
          },
          "description": {
            "type": "string",
            "description": "Model description."
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time (UTC) when the model was created"
          }
        },
        "required": [
          "modelId",
          "description",
          "createdDateTime"
        ]
      },
      "Cadl.Rest.Resource.Page_ModelSummary": {
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModelSummary"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.ModelSummary[]",
            "description": "The items on this page"
          },
          "nextLink": {
            "type": "string",
            "description": "The link to the next page of items"
          }
        },
        "description": "Paged response",
        "required": [
          "value"
        ]
      },
      "CustomDocumentModelsInfo": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "Number of custom models in the current resource."
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of custom models supported in the current resource."
          }
        },
        "description": "Info regarding custom document models.",
        "required": [
          "count",
          "limit"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Error"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.Error[]"
          },
          "innerError": {
            "$ref": "#/components/schemas/InnerError"
          }
        },
        "required": [
          "code",
          "message",
          "target",
          "details",
          "innerError"
        ]
      },
      "AnalyzeResultOperationStatus": {
        "type": "string",
        "description": "Operation status.",
        "enum": [
          "notStarted",
          "runnning",
          "failed",
          "succeeded"
        ]
      },
      "AnalyzeResult": {
        "type": "object",
        "properties": {
          "apiVersion": {
            "type": "string",
            "enum": [
              "2021-09-30-preview"
            ],
            "description": "API version used to produce this result."
          },
          "modelId": {
            "$ref": "#/components/schemas/ModelId",
            "description": "Model ID used to produce this result."
          },
          "stringIndexType": {
            "$ref": "#/components/schemas/StringIndexType",
            "description": "Method used to compute string offset and length."
          },
          "content": {
            "type": "string",
            "description": "Concatenate string representation of all textual and visual elements in reading order."
          },
          "pages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentPage"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.DocumentPage[]",
            "description": "Analyzed pages."
          },
          "tables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentTable"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.DocumentTable[]",
            "description": "Extracted tables."
          },
          "keyValuePairs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentKeyValuePair"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.DocumentKeyValuePair[]",
            "description": "Extracted key-value pairs."
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentEntity"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.DocumentEntity[]",
            "description": "Extracted entities."
          },
          "styles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentStyle"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.DocumentStyle[]",
            "description": "Extracted styles."
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.Document[]",
            "description": "Extracted documents."
          }
        },
        "required": [
          "apiVersion",
          "modelId",
          "stringIndexType",
          "content",
          "pages",
          "tables",
          "keyValuePairs",
          "entities",
          "styles",
          "documents"
        ]
      },
      "ModelId": {
        "type": "string",
        "pattern": "[a-zA-Z0-9][a-zA-Z0-9._~-]{1,63}"
      },
      "ModelDescription": {
        "type": "string",
        "maxLength": 4096
      },
      "AzureBlobContentSource": {
        "type": "object",
        "properties": {
          "containerUrl": {
            "type": "string",
            "description": "Azure Blob Storage container URL."
          },
          "prefix": {
            "type": "string",
            "description": "Blob name prefix."
          }
        },
        "description": "Azure Blob Storage content.",
        "required": [
          "containerUrl"
        ]
      },
      "ComponentModelInfo": {
        "type": "object",
        "properties": {
          "modelId": {
            "$ref": "#/components/schemas/ModelId",
            "description": "Model Id"
          }
        },
        "description": "A component of a composed model.",
        "required": [
          "modelId"
        ]
      },
      "OperationInfo": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "Operation ID"
          },
          "status": {
            "$ref": "#/components/schemas/OperationStatus",
            "description": "Operation status."
          },
          "percentCompleted": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 100,
            "description": "Operation progress (0-100)."
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time (UTC) when the operation was created."
          },
          "lastUpdatedDateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time (UTC) when the status was last updated."
          },
          "kind": {
            "$ref": "#/components/schemas/OperationKind",
            "description": "Type of operation"
          },
          "resourceLocation": {
            "type": "string",
            "description": "URL of the resource targeted by this operation."
          }
        },
        "description": "Operation info.",
        "required": [
          "operationId",
          "status",
          "percentCompleted",
          "createdDateTime",
          "lastUpdatedDateTime",
          "kind",
          "resourceLocation"
        ]
      },
      "InnerError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "innerError": {
            "$ref": "#/components/schemas/InnerError"
          }
        },
        "required": [
          "code",
          "message",
          "target",
          "innerError"
        ]
      },
      "StringIndexType": {
        "type": "string",
        "description": "Method used to compute string offset and length.",
        "enum": [
          "textElements",
          "unicodeCodePoint",
          "utf16CodeUnit"
        ]
      },
      "DocumentPage": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "description": "1-based page number in the input document."
          },
          "angle": {
            "type": "integer",
            "format": "int32",
            "minimum": -180,
            "maximum": 180,
            "description": "The general orientation of the content in clockwise direction, measured in degrees between (-180, 180]."
          },
          "width": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "The width of the image/PDF in pixels/inches, respectively."
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "The height of the image/PDF in pixels/inches, respectively."
          },
          "unit": {
            "$ref": "#/components/schemas/LengthUnit",
            "description": "The unit used by the width, height, and boundingBox properties."
          },
          "spans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSpan"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.DocumentSpan[]",
            "description": "Location of the page in the reading order concatenated content."
          },
          "words": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentWord"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.DocumentWord[]",
            "description": "Extracted words from the page."
          },
          "selectionMarks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSelectionMark"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.DocumentSelectionMark[]",
            "description": "Extracted selection marks from the page."
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentLine"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.DocumentLine[]",
            "description": "Extracted lines from the page, potentially containing both textual and visual elements."
          }
        },
        "description": "Content and layout elements extracted from a page from the input.",
        "required": [
          "pageNumber",
          "angle",
          "width",
          "height",
          "unit",
          "spans",
          "words",
          "selectionMarks",
          "lines"
        ]
      },
      "DocumentTable": {
        "type": "object",
        "properties": {
          "rowCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of rows in the table."
          },
          "columnCount": {
            "type": "integer",
            "format": "int32",
            "description": "Number of columns in the table."
          },
          "cells": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentTableCell"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.DocumentTableCell[]",
            "description": "Cells contained within the table."
          },
          "boundingRegions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoundingRegion"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.BoundingRegion[]",
            "description": "Bounding regions covering the table."
          },
          "spans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSpan"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.DocumentSpan[]",
            "description": "Location of the table in the reading order concatenated content."
          }
        },
        "description": "A table object consisting table cells arranged in a rectangular layout.",
        "required": [
          "rowCount",
          "columnCount",
          "cells",
          "spans"
        ]
      },
      "DocumentKeyValuePair": {
        "type": "object",
        "properties": {
          "key": {
            "$ref": "#/components/schemas/DocumentKeyValueElement",
            "description": "Field label of the key-value pair."
          },
          "value": {
            "$ref": "#/components/schemas/DocumentKeyValueElement",
            "description": "Field value of the key-value pair."
          },
          "confidence": {
            "$ref": "#/components/schemas/Confidence",
            "description": "Confidence of correctly extracting the key-value pair."
          }
        },
        "description": "An object representing a form field with distinct field label (key) and field value (may be empty).",
        "required": [
          "key",
          "confidence"
        ]
      },
      "DocumentEntity": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "Entity type."
          },
          "subCategory": {
            "type": "string",
            "description": "Entity sub type."
          },
          "content": {
            "type": "string",
            "description": "Content content"
          },
          "boundingRegions": {
            "$ref": "#/components/schemas/BoundingRegion",
            "description": "Bounding regions covering the entity."
          },
          "spans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSpan"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.DocumentSpan[]",
            "description": "Location of the entity in the reading order concatenated content."
          },
          "confidence": {
            "$ref": "#/components/schemas/Confidence",
            "description": "Confidence of correctly extracting the entity."
          }
        },
        "description": "An object representing various categories of entities.",
        "required": [
          "category",
          "subCategory",
          "content",
          "spans",
          "confidence"
        ]
      },
      "DocumentStyle": {
        "type": "object",
        "properties": {
          "spans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSpan"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.DocumentSpan[]",
            "description": "Location of the text elements in the concatenated content the style applies to."
          },
          "confidence": {
            "$ref": "#/components/schemas/Confidence",
            "description": "Confidence of correctly identifying the style."
          },
          "isHandwritten": {
            "type": "boolean",
            "description": "Is content handwritten?"
          }
        },
        "description": "An object representing observed text styles.",
        "required": [
          "spans",
          "confidence"
        ]
      },
      "Document": {
        "type": "object",
        "properties": {
          "docType": {
            "$ref": "#/components/schemas/DocType",
            "description": "Document type"
          },
          "spans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSpan"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.DocumentSpan[]",
            "description": "Location of the document in the reading order concatenated content."
          },
          "fields": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DocumentField"
            },
            "description": "Dictionary of named field values."
          },
          "confidence": {
            "$ref": "#/components/schemas/Confidence",
            "description": "Confidence of correctly extracting the document."
          },
          "boundingRegions": {
            "$ref": "#/components/schemas/BoundingRegion",
            "description": "Bounding regions covering the document."
          }
        },
        "description": "An object describing the location and semantic content of a document.",
        "required": [
          "docType",
          "spans",
          "fields",
          "confidence"
        ]
      },
      "OperationStatus": {
        "type": "string",
        "description": "Operation status.",
        "enum": [
          "notStarted",
          "running",
          "failed",
          "succeeded",
          "canceled"
        ]
      },
      "OperationKind": {
        "type": "string",
        "description": "Type of operation",
        "enum": [
          "documentModelBuild",
          "documentModelCompose",
          "documentModelCopyTo"
        ]
      },
      "LengthUnit": {
        "type": "string",
        "description": "The unit used by the width, height, and boundingBox properties. For images, the unit is \"pixel\". For PDF, the unit is \"inch\".",
        "enum": [
          "pixel",
          "inch"
        ]
      },
      "DocumentSpan": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Zero-based index of the content represented by the span."
          },
          "length": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "description": "Number of characters in the content represented by the span."
          }
        },
        "description": "Contiguous region of the concatenated content property, specified as an offset and length.",
        "required": [
          "offset",
          "length"
        ]
      },
      "DocumentWord": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Text content of the word."
          },
          "boundingBox": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "x-cadl-name": "Cadl.float64[]",
            "description": "Bounding box of the word"
          },
          "span": {
            "$ref": "#/components/schemas/DocumentSpan",
            "description": "Location of the word in the reading order concatenated content."
          },
          "confidence": {
            "$ref": "#/components/schemas/Confidence",
            "description": "Confidence of correctly extracting the word."
          }
        },
        "description": "A word object consisting of a contiguous sequence of characters. For non-space delimited languages, such as Chinese, Japanese, and Korean, each character is represented as its own word.",
        "required": [
          "content",
          "span",
          "confidence"
        ]
      },
      "DocumentSelectionMark": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/SelectionMarkState",
            "description": "State of the selection mark."
          },
          "boundingBox": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "x-cadl-name": "Cadl.float64[]",
            "description": "Bounding box of the selection mark."
          },
          "span": {
            "$ref": "#/components/schemas/DocumentSpan",
            "description": "Location of the selection mark in the reading order concatenated content."
          },
          "confidence": {
            "$ref": "#/components/schemas/Confidence",
            "description": "Confidence of correctly extracting the selection mark."
          }
        },
        "description": "A selection mark object representing check boxes, radio buttons, and other elements indicating a selection.",
        "required": [
          "state",
          "span",
          "confidence"
        ]
      },
      "DocumentLine": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Concatenated content of the contained elements in reading order."
          },
          "spans": {
            "$ref": "#/components/schemas/DocumentSpan",
            "description": "Location of the line in the reading order concatenated content."
          },
          "boundingBox": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "x-cadl-name": "Cadl.float64[]",
            "description": "Bounding box of the line."
          }
        },
        "description": "A content line object consisting of an adjacent sequence of content elements, such as words and selection marks.",
        "required": [
          "content",
          "spans"
        ]
      },
      "DocumentTableCell": {
        "type": "object",
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/DocumentTableCellKind"
          },
          "rowIndex": {
            "type": "integer",
            "format": "int32",
            "description": "Row index of the cell."
          },
          "columnIndex": {
            "type": "integer",
            "format": "int32",
            "description": "Column  index of the cell."
          },
          "rowSpan": {
            "type": "integer",
            "format": "int32",
            "description": "Number of rows spanned by this cell."
          },
          "columnSpan": {
            "type": "integer",
            "format": "int32",
            "description": "Number of columns spanned by this cell."
          },
          "content": {
            "type": "string",
            "description": "Concatenated content of the table cell in reading order."
          },
          "boundingRegions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoundingRegion"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.BoundingRegion[]",
            "description": "Bounding regions covering the table cell."
          },
          "spans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSpan"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.DocumentSpan[]",
            "description": "Location of the table cell in the reading order concatenated content."
          }
        },
        "description": "An object representing the location and content of a table cell.",
        "required": [
          "rowIndex",
          "columnIndex",
          "content",
          "spans"
        ]
      },
      "BoundingRegion": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "description": "1-based page number of page containing the bounding region."
          },
          "boundingBox": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            },
            "x-cadl-name": "Cadl.float64[]",
            "description": "Bounding box on the page, or the entire page if not specified."
          }
        },
        "description": "Bounding box on a specific page of the input.",
        "required": [
          "pageNumber",
          "boundingBox"
        ]
      },
      "DocumentKeyValueElement": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Concatenated content of the key-value element in reading order."
          },
          "spans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSpan"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.DocumentSpan[]",
            "description": "Location of the key-value element in the reading order concatenated content."
          },
          "boundingRegions": {
            "$ref": "#/components/schemas/BoundingRegion",
            "description": "Bounding regions covering the key-value element."
          }
        },
        "description": "An object representing the field key or value in a key-value pair.",
        "required": [
          "content",
          "spans"
        ]
      },
      "Confidence": {
        "type": "number",
        "format": "double",
        "minimum": 0,
        "maximum": 1
      },
      "DocType": {
        "type": "string",
        "minLength": 2,
        "maxLength": 64
      },
      "DocumentField": {
        "type": "object",
        "properties": {
          "spans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSpan"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.DocumentSpan[]",
            "description": "Location of the field in the reading order concatenated content."
          },
          "confidence": {
            "$ref": "#/components/schemas/Confidence",
            "description": "Confidence of correctly extracting the field."
          },
          "type": {
            "$ref": "#/components/schemas/DocumentFieldType",
            "description": "Data type of the field value."
          },
          "valueString": {
            "type": "string",
            "description": "String value."
          },
          "valueDate": {
            "type": "string",
            "format": "date",
            "description": "Date value in YYYY-MM-DD format (ISO 8601)."
          },
          "valueTime": {
            "type": "string",
            "format": "time",
            "description": "Time value in hh:mm:ss format (ISO 8601)."
          },
          "valuePhoneNumber": {
            "type": "string",
            "description": "Phone number value in E.164 format (ex. +19876543210)."
          },
          "valueNumber": {
            "type": "number",
            "format": "double",
            "description": "Floating point value"
          },
          "valueInteger": {
            "type": "integer",
            "format": "int64",
            "description": "Integer value"
          },
          "valueSelectionMark": {
            "$ref": "#/components/schemas/SelectionMarkState",
            "description": "Selection mark value."
          },
          "valueSignature": {
            "$ref": "#/components/schemas/DocumentSignatureType",
            "description": "Presence of signature."
          },
          "valueCountryRegion": {
            "type": "string",
            "description": "3-letter country code value (ISO 3166-1 alpha-3)."
          },
          "valueArray": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentField"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.DocumentField[]",
            "description": "Array of field values."
          },
          "valueObject": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DocumentField"
            },
            "description": "Dictionary of named field values."
          },
          "content": {
            "type": "string",
            "description": "Field content."
          },
          "boundingRegions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BoundingRegion"
            },
            "x-cadl-name": "Microsoft.Azure.FormRecognizer.BoundingRegion[]",
            "description": "Bounding regions covering the field."
          }
        },
        "description": "An object representing the content and location of a field value.",
        "required": [
          "spans",
          "confidence",
          "type"
        ]
      },
      "SelectionMarkState": {
        "type": "string",
        "description": "State of the selection mark.",
        "enum": [
          "selected",
          "unselected"
        ]
      },
      "DocumentTableCellKind": {
        "type": "string",
        "description": "Table cell kind.",
        "enum": [
          "content",
          "rowHeader",
          "columnHeader",
          "stubHead",
          "description"
        ]
      },
      "DocumentFieldType": {
        "type": "string",
        "description": "Semantic data type of the field value.",
        "enum": [
          "string",
          "date",
          "time",
          "phoneNumber",
          "number",
          "integer",
          "selectionMark",
          "countryRegion",
          "signature",
          "array",
          "object"
        ]
      },
      "DocumentSignatureType": {
        "type": "string",
        "description": "Presence of signature.",
        "enum": [
          "signed",
          "unsigned"
        ]
      }
    }
  }
}
