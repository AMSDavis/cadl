{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.Logz",
    "version": "2020-10-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "tags": [
    {
      "name": "SubAccounts"
    },
    {
      "name": "Operations"
    },
    {
      "name": "Monitors"
    },
    {
      "name": "TagRules"
    },
    {
      "name": "SingleSignOnConfigurations"
    },
    {
      "name": "SubAccountTagRules"
    }
  ],
  "paths": {
    "/providers/Microsoft.Logz/operations": {
      "get": {
        "operationId": "Operations_List",
        "summary": "List the operations for Microsoft.Logz",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/OperationListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Operations"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Logz/monitors": {
      "get": {
        "operationId": "Monitors_ListBySubscription",
        "summary": "List LogzMonitorResource resources by subscription ID",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LogzMonitorResourceListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Monitors"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors": {
      "get": {
        "operationId": "Monitors_ListByResourceGroup",
        "summary": "List LogzMonitorResource resources by resource group",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LogzMonitorResourceListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Monitors"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}": {
      "get": {
        "operationId": "Monitors_Get",
        "summary": "Get a LogzMonitorResource",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LogzMonitorResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Monitors"
        ]
      },
      "put": {
        "operationId": "Monitors_CreateOrUpdate",
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true,
        "summary": "Create a LogzMonitorResource",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/LogzMonitorResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LogzMonitorResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LogzMonitorResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Monitors"
        ]
      },
      "patch": {
        "operationId": "Monitors_Update",
        "summary": "Update a LogzMonitorResource",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/LogzMonitorResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/LogzMonitorResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Monitors"
        ]
      },
      "delete": {
        "operationId": "Monitors_Delete",
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true,
        "summary": "Delete a LogzMonitorResource",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "Monitors"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/accounts": {
      "get": {
        "operationId": "SubAccounts_List",
        "summary": "List all SubAccountResource by monitorName",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubAccountResourceListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "SubAccounts"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/accounts/{subAccountName}": {
      "patch": {
        "operationId": "SubAccounts_Update",
        "summary": "Update a SubAccountResource",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          },
          {
            "$ref": "#/parameters/SubAccountNameParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/SubAccountResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubAccountResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "SubAccounts"
        ]
      },
      "get": {
        "operationId": "SubAccounts_Get",
        "summary": "Get a SubAccountResource",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          },
          {
            "$ref": "#/parameters/SubAccountNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubAccountResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "SubAccounts"
        ]
      },
      "put": {
        "operationId": "SubAccounts_CreateOrUpdate",
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true,
        "summary": "Create a SubAccountResource",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          },
          {
            "$ref": "#/parameters/SubAccountNameParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/SubAccountResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubAccountResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubAccountResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "SubAccounts"
        ]
      },
      "delete": {
        "operationId": "SubAccounts_Delete",
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true,
        "summary": "Delete a SubAccountResource",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          },
          {
            "$ref": "#/parameters/SubAccountNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "SubAccounts"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/accounts/{subAccountName}/tagRules": {
      "get": {
        "operationId": "SubAccountTagRules_List",
        "summary": "List all SubAccountTagRuleResource by subAccountName",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          },
          {
            "$ref": "#/parameters/SubAccountNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubAccountTagRuleResourceListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "SubAccountTagRules"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/accounts/{subAccountName}/tagRules/{tagName}": {
      "get": {
        "operationId": "SubAccountTagRules_Get",
        "summary": "Get a SubAccountTagRuleResource",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          },
          {
            "$ref": "#/parameters/SubAccountNameParameter"
          },
          {
            "$ref": "#/parameters/TagNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubAccountTagRuleResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "SubAccountTagRules"
        ]
      },
      "put": {
        "operationId": "SubAccountTagRules_CreateOrUpdate",
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true,
        "summary": "Create a SubAccountTagRuleResource",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          },
          {
            "$ref": "#/parameters/SubAccountNameParameter"
          },
          {
            "$ref": "#/parameters/TagNameParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/SubAccountTagRuleResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubAccountTagRuleResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SubAccountTagRuleResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "SubAccountTagRules"
        ]
      },
      "delete": {
        "operationId": "SubAccountTagRules_Delete",
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true,
        "summary": "Delete a SubAccountTagRuleResource",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          },
          {
            "$ref": "#/parameters/SubAccountNameParameter"
          },
          {
            "$ref": "#/parameters/TagNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "SubAccountTagRules"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/singleSignOnConfigurations": {
      "get": {
        "operationId": "SingleSignOnConfigurations_List",
        "summary": "List all SingleSignOnConfigurationResource by monitorName",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SingleSignOnConfigurationResourceListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "SingleSignOnConfigurations"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/singleSignOnConfigurations/{configurationName}": {
      "get": {
        "operationId": "SingleSignOnConfigurations_Get",
        "summary": "Get a SingleSignOnConfigurationResource",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          },
          {
            "$ref": "#/parameters/SingleSignOnConfigurationsParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SingleSignOnConfigurationResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "SingleSignOnConfigurations"
        ]
      },
      "put": {
        "operationId": "SingleSignOnConfigurations_CreateOrUpdate",
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true,
        "summary": "Create a SingleSignOnConfigurationResource",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          },
          {
            "$ref": "#/parameters/SingleSignOnConfigurationsParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/SingleSignOnConfigurationResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SingleSignOnConfigurationResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SingleSignOnConfigurationResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "SingleSignOnConfigurations"
        ]
      },
      "patch": {
        "operationId": "SingleSignOnConfigurations_Update",
        "summary": "Update a SingleSignOnConfigurationResource",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          },
          {
            "$ref": "#/parameters/SingleSignOnConfigurationsParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "The resource properties to be updated.",
            "schema": {
              "$ref": "#/definitions/SingleSignOnConfigurationResourceUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/SingleSignOnConfigurationResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "SingleSignOnConfigurations"
        ]
      },
      "delete": {
        "operationId": "SingleSignOnConfigurations_Delete",
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true,
        "summary": "Delete a SingleSignOnConfigurationResource",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          },
          {
            "$ref": "#/parameters/SingleSignOnConfigurationsParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "SingleSignOnConfigurations"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/tagRules": {
      "get": {
        "operationId": "TagRules_List",
        "summary": "List all TagRuleResource by monitorName",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagRuleResourceListResult"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "TagRules"
        ],
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/{monitorName}/tagRules/{tagName}": {
      "get": {
        "operationId": "TagRules_Get",
        "summary": "Get a TagRuleResource",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          },
          {
            "$ref": "#/parameters/TagNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagRuleResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "TagRules"
        ]
      },
      "put": {
        "operationId": "TagRules_CreateOrUpdate",
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true,
        "summary": "Create a TagRuleResource",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          },
          {
            "$ref": "#/parameters/TagNameParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "Resource create parameters.",
            "schema": {
              "$ref": "#/definitions/TagRuleResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagRuleResource"
            }
          },
          "201": {
            "description": "ARM create operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/TagRuleResource"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "TagRules"
        ]
      },
      "delete": {
        "operationId": "TagRules_Delete",
        "x-ms-long-running-operation-options": {
          "final-state-via": "azure-async-operation"
        },
        "x-ms-long-running-operation": true,
        "summary": "Delete a TagRuleResource",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/MonitorNameParameter"
          },
          {
            "$ref": "#/parameters/TagNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "202": {
            "description": "Resource deletion accepted."
          },
          "204": {
            "description": "Resource deleted successfully."
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        },
        "tags": [
          "TagRules"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Logz/monitors/listMonitoredResources/{name}": {
      "post": {
        "operationId": "LogzMonitors_listMonitoredResources",
        "summary": "List the resources currently being monitored by the Logz monitor resource.",
        "parameters": [
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "../../../../../../rpaas/types.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "The name of the Logz Monitor resource.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A lit of monitored resources.",
            "schema": {
              "$ref": "#/definitions/MonitoredResourceListResponse"
            }
          },
          "default": {
            "description": "Common error response for all Azure Resource Manager APIs to return error details for failed operations.",
            "schema": {
              "$ref": "../../../../../../rpaas/types.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "LiftrResourceCategories": {
      "type": "string",
      "description": "Liftr resource category",
      "enum": [
        "Unknown",
        "MonitorLogs"
      ],
      "x-ms-enum": {
        "name": "LiftrResourceCategories",
        "modelAsString": true
      }
    },
    "LogzMonitorResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LogzMonitorResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../../rpaas/types.json#/definitions/systemData",
          "description": "System metadata for this resource.",
          "readOnly": true
        }
      },
      "description": "The LogZ Monitor resource details.",
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../../rpaas/types.json#/definitions/TrackedResource"
        }
      ]
    },
    "LogzMonitorResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogzMonitorResource"
          },
          "x-cadl-name": "Microsoft.Logz.LogzMonitorResource[]",
          "description": "The items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items"
        }
      },
      "description": "The response of a LogzMonitorResource list operation.",
      "required": [
        "value"
      ]
    },
    "LogzMonitorResourceProperties": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource."
        },
        "monitoringStatus": {
          "$ref": "#/definitions/MonitoringStatus",
          "description": "Status of the monitor."
        },
        "marketplaceSubscriptionStatus": {
          "$ref": "#/definitions/MarketplaceSubscriptionStatus",
          "description": "Marketplace subscription status."
        },
        "logzOrganizationProperties": {
          "$ref": "#/definitions/LogzOrganizationProperties",
          "description": "Properties of the Logz organization."
        },
        "userInfo": {
          "$ref": "#/definitions/UserInfo",
          "description": "User info."
        },
        "planData": {
          "$ref": "#/definitions/PlanData",
          "description": "Billing plan information."
        },
        "liftrResourceCategory": {
          "$ref": "#/definitions/LiftrResourceCategories",
          "description": "Liftr Resource category."
        },
        "liftrResourcePreference": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the resource."
        }
      },
      "description": "The properties of a Logz Monitor Service resource.",
      "required": [
        "provisioningState",
        "monitoringStatus",
        "marketplaceSubscriptionStatus",
        "logzOrganizationProperties",
        "userInfo",
        "planData",
        "liftrResourceCategory",
        "liftrResourcePreference"
      ]
    },
    "LogzMonitorResourceUpdate": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags.",
          "x-ms-mutability": [
            "read",
            "update",
            "create"
          ]
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource."
        },
        "monitoringStatus": {
          "$ref": "#/definitions/MonitoringStatus",
          "description": "Status of the monitor."
        },
        "marketplaceSubscriptionStatus": {
          "$ref": "#/definitions/MarketplaceSubscriptionStatus",
          "description": "Marketplace subscription status."
        },
        "logzOrganizationProperties": {
          "$ref": "#/definitions/LogzOrganizationProperties",
          "description": "Properties of the Logz organization."
        },
        "userInfo": {
          "$ref": "#/definitions/UserInfo",
          "description": "User info."
        },
        "planData": {
          "$ref": "#/definitions/PlanData",
          "description": "Billing plan information."
        },
        "liftrResourceCategory": {
          "$ref": "#/definitions/LiftrResourceCategories",
          "description": "Liftr Resource category."
        },
        "liftrResourcePreference": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the resource."
        }
      },
      "description": "The updatable properties of the LogzMonitorResource."
    },
    "LogzOrganizationProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the Logz organization."
        },
        "companyName": {
          "type": "string",
          "description": "Name of the Logz organization."
        },
        "enterpriseAppId": {
          "type": "string",
          "description": "The Id of the Enterprise App used for Single sign on."
        }
      },
      "description": "Details of the log organization.",
      "required": [
        "id",
        "companyName",
        "enterpriseAppId"
      ]
    },
    "LogzSingleSignOnProperties": {
      "type": "object",
      "properties": {
        "singleSignOnState": {
          "$ref": "#/definitions/SingleSignOnStates",
          "description": "Various states of the SSO resource"
        },
        "enterpriseAppId": {
          "type": "string",
          "description": "The Id of the Enterprise App used for Single sign-on."
        },
        "singleSignOnUrl": {
          "type": "string",
          "description": "The login URL specific to this Logz Organization."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the SSO resource"
        }
      },
      "description": "Single sign-on properties for a LogZ resource.",
      "required": [
        "singleSignOnState",
        "enterpriseAppId",
        "singleSignOnUrl",
        "provisioningState"
      ]
    },
    "MarketplaceSubscriptionStatus": {
      "type": "string",
      "description": "Flag specifying the Marketplace Subscription Status of the resource. If payment is not made in time, the resource will go in Suspended state.",
      "enum": [
        "Active",
        "Suspended"
      ],
      "x-ms-enum": {
        "name": "MarketplaceSubscriptionStatus",
        "modelAsString": true
      }
    },
    "MediumString": {
      "type": "string",
      "minLength": 5,
      "maxLength": 50,
      "description": "Shorthand for setting length limit."
    },
    "MonitoredResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM id of the resource."
        },
        "sendingMetrics": {
          "type": "boolean",
          "description": "Flag indicating if resource is sending metrics to Logz."
        },
        "reasonForMetricsStatus": {
          "type": "string",
          "description": "Reason for why the resource is sending metrics (or why it is not sending)."
        },
        "sendingLogs": {
          "type": "boolean",
          "description": "Flag indicating if resource is sending logs to Logz."
        },
        "reasonForLogsStatus": {
          "type": "string",
          "description": "Reason for why the resource is sending logs (or why it is not sending)."
        }
      },
      "description": "A resource that is monitored by a Logz monitor instance.",
      "required": [
        "id",
        "sendingMetrics",
        "reasonForMetricsStatus",
        "sendingLogs",
        "reasonForLogsStatus"
      ]
    },
    "MonitoredResourceListResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonitoredResource"
          },
          "x-cadl-name": "Microsoft.Logz.MonitoredResource[]",
          "description": "The items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items"
        }
      },
      "description": "A lit of monitored resources.",
      "required": [
        "value"
      ]
    },
    "MonitoringStatus": {
      "type": "string",
      "description": "Flag specifying if the resource monitoring is enabled or disabled.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "MonitoringStatus",
        "modelAsString": true
      }
    },
    "PlanData": {
      "type": "object",
      "properties": {
        "usageType": {
          "$ref": "#/definitions/MediumString",
          "description": "different usage type like PAYG/COMMITTED. this could be enum"
        },
        "billingCycle": {
          "$ref": "#/definitions/MediumString",
          "description": "different billing cycles like MONTHLY/WEEKLY. this could be enum"
        },
        "planDetails": {
          "$ref": "#/definitions/MediumString",
          "description": "plan id as published by Logz"
        },
        "effectiveDate": {
          "type": "string",
          "format": "date-time",
          "description": "date when plan was applied"
        }
      },
      "description": "Billing plan information.",
      "required": [
        "usageType",
        "billingCycle",
        "planDetails",
        "effectiveDate"
      ]
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the monitoring resource",
      "enum": [
        "Accepted",
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled",
        "Deleted",
        "NotSpecified"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "SingleSignOnConfigurationResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LogzSingleSignOnProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../../rpaas/types.json#/definitions/systemData",
          "description": "System metadata for this resource.",
          "readOnly": true
        }
      },
      "description": "Details of a single sign-on configuration.",
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../../rpaas/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SingleSignOnConfigurationResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SingleSignOnConfigurationResource"
          },
          "x-cadl-name": "Microsoft.Logz.SingleSignOnConfigurationResource[]",
          "description": "The items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items"
        }
      },
      "description": "The response of a SingleSignOnConfigurationResource list operation.",
      "required": [
        "value"
      ]
    },
    "SingleSignOnConfigurationResourceUpdate": {
      "type": "object",
      "properties": {
        "singleSignOnState": {
          "$ref": "#/definitions/SingleSignOnStates",
          "description": "Various states of the SSO resource"
        },
        "enterpriseAppId": {
          "type": "string",
          "description": "The Id of the Enterprise App used for Single sign-on."
        },
        "singleSignOnUrl": {
          "type": "string",
          "description": "The login URL specific to this Logz Organization."
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "The provisioning state of the SSO resource"
        }
      },
      "description": "The updatable properties of the SingleSignOnConfigurationResource."
    },
    "SingleSignOnStates": {
      "type": "string",
      "description": "Various states of the SSO resource",
      "enum": [
        "Initial",
        "Enable",
        "Disable",
        "Existing"
      ],
      "x-ms-enum": {
        "name": "SingleSignOnStates",
        "modelAsString": true
      }
    },
    "SubAccountResource": {
      "type": "object",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LogzMonitorResourceProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../../rpaas/types.json#/definitions/systemData",
          "description": "System metadata for this resource.",
          "readOnly": true
        }
      },
      "description": "Details of a sub account.",
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../../rpaas/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SubAccountResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubAccountResource"
          },
          "x-cadl-name": "Microsoft.Logz.SubAccountResource[]",
          "description": "The items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items"
        }
      },
      "description": "The response of a SubAccountResource list operation.",
      "required": [
        "value"
      ]
    },
    "SubAccountResourceUpdate": {
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState",
          "description": "Provisioning state of the resource."
        },
        "monitoringStatus": {
          "$ref": "#/definitions/MonitoringStatus",
          "description": "Status of the monitor."
        },
        "marketplaceSubscriptionStatus": {
          "$ref": "#/definitions/MarketplaceSubscriptionStatus",
          "description": "Marketplace subscription status."
        },
        "logzOrganizationProperties": {
          "$ref": "#/definitions/LogzOrganizationProperties",
          "description": "Properties of the Logz organization."
        },
        "userInfo": {
          "$ref": "#/definitions/UserInfo",
          "description": "User info."
        },
        "planData": {
          "$ref": "#/definitions/PlanData",
          "description": "Billing plan information."
        },
        "liftrResourceCategory": {
          "$ref": "#/definitions/LiftrResourceCategories",
          "description": "Liftr Resource category."
        },
        "liftrResourcePreference": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of the resource."
        }
      },
      "description": "The updatable properties of the SubAccountResource."
    },
    "SubAccountTagRuleResource": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {},
          "description": "The resource-specific properties for this resource.",
          "x-cadl-name": "(anonymous model)",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../../rpaas/types.json#/definitions/systemData",
          "description": "System metadata for this resource.",
          "readOnly": true
        }
      },
      "description": "Details of a SubAccount TagRule.",
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../../rpaas/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "SubAccountTagRuleResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubAccountTagRuleResource"
          },
          "x-cadl-name": "Microsoft.Logz.SubAccountTagRuleResource[]",
          "description": "The items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items"
        }
      },
      "description": "The response of a SubAccountTagRuleResource list operation.",
      "required": [
        "value"
      ]
    },
    "TagRuleResource": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {},
          "description": "The resource-specific properties for this resource.",
          "x-cadl-name": "(anonymous model)",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "x-ms-client-flatten": true
        },
        "systemData": {
          "$ref": "../../../../../../rpaas/types.json#/definitions/systemData",
          "description": "System metadata for this resource.",
          "readOnly": true
        }
      },
      "description": "Details of a TagRule.",
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "$ref": "../../../../../../rpaas/types.json#/definitions/ProxyResource"
        }
      ]
    },
    "TagRuleResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TagRuleResource"
          },
          "x-cadl-name": "Microsoft.Logz.TagRuleResource[]",
          "description": "The items on this page"
        },
        "nextLink": {
          "type": "string",
          "description": "The link to the next page of items"
        }
      },
      "description": "The response of a TagRuleResource list operation.",
      "required": [
        "value"
      ]
    },
    "UserInfo": {
      "type": "object",
      "properties": {
        "firstName": {
          "$ref": "#/definitions/MediumString",
          "description": "First Name of the user"
        },
        "lastName": {
          "$ref": "#/definitions/MediumString",
          "description": "Last Name of the user"
        },
        "emailAddress": {
          "$ref": "#/definitions/email",
          "description": "Email of the user used by Logz for contacting them if needed"
        },
        "phoneNumber": {
          "type": "string",
          "maxLength": 40,
          "description": "Phone number of the user used by Logz for contacting them if needed"
        }
      },
      "description": "User details.",
      "required": [
        "firstName",
        "lastName",
        "emailAddress",
        "phoneNumber"
      ]
    },
    "email": {
      "type": "string",
      "pattern": "^[A-Za-z0-9._%+-]+@(?:[A-Za-z0-9-]+\\.)+[A-Za-z]{2,}$",
      "description": "Reusable representation of an email address"
    }
  },
  "parameters": {
    "MonitorNameParameter": {
      "x-ms-parameter-location": "method",
      "name": "monitorName",
      "in": "path",
      "required": true,
      "description": "Monitor resource name",
      "type": "string"
    },
    "SingleSignOnConfigurationsParameter": {
      "x-ms-parameter-location": "method",
      "name": "configurationName",
      "in": "path",
      "required": true,
      "description": "Configuration name",
      "type": "string"
    },
    "SubAccountNameParameter": {
      "x-ms-parameter-location": "method",
      "name": "subAccountName",
      "in": "path",
      "required": true,
      "description": "Sub account name",
      "type": "string"
    },
    "TagNameParameter": {
      "x-ms-parameter-location": "method",
      "name": "tagName",
      "in": "path",
      "required": true,
      "description": "Tag name",
      "type": "string"
    }
  }
}
