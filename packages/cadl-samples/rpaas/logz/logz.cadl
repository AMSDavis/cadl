import "@cadl-lang/rest";
import "@azure-tools/cadl-autorest";
import "@azure-tools/cadl-rpaas";
import "./models.cadl";

@armNamespace
@serviceTitle("Microsoft.Logz")
@serviceVersion("2020-10-01-preview")
namespace Microsoft.Logz;

using Azure.ARM;

@armResource({
    path: "monitors",
    collectionName: "Monitors",
    parameterType: MonitorNameParameter,
})
@doc("The LogZ Monitor resource details.")
model LogzMonitorResource is TrackedResource<LogzMonitorResourceProperties> {}

model MonitorNameParameter {
  @doc("Monitor resource name")
  @path monitorName: string;
}

@armResourceOperations(LogzMonitorResource)
namespace LogzMonitors {
  @post("listMonitoredResources")
  @doc("List the resources currently being monitored by the Logz monitor resource.")
  op listMonitoredResources(
    ...CommonResourceParameters, 
    @doc("The name of the Logz Monitor resource.")
    @path name: string
    ): MonitoredResourceListResponse | ErrorResponse;
}

@armListBy(MonitorNameParameter, "List")
@armResource({
  path: "tagRules",
  collectionName: "TagRules",
  parentResourceType: LogzMonitorResource,
  parameterType: TagNameParameter,
  standardOperations: ["read", "create", "delete"]
})
@doc("Details of a TagRule.")
model TagRuleResource is ProxyResource<{}> {}

model TagNameParameter {
  @doc("Tag name")
  @path tagName: string;
}

model SingleSignOnConfigurationsParameter {
  @doc("Configuration name")
  @path configurationName: string;
}

@armListBy(MonitorNameParameter, "List")
@armResource({
  path: "singleSignOnConfigurations",
  collectionName: "SingleSignOnConfigurations",
  parentResourceType: LogzMonitorResource,
  parameterType: SingleSignOnConfigurationsParameter,
})
@doc("Details of a single sign-on configuration.")
model SingleSignOnConfigurationResource is ProxyResource<LogzSingleSignOnProperties> {};

@armListBy(MonitorNameParameter, "List")
@armResource({
  path: "accounts",
  collectionName: "SubAccounts",
  parentResourceType: LogzMonitorResource,
  parameterType: SubAccountNameParameter,
})
@doc("Details of a sub account.")
model SubAccountResource is ProxyResource<LogzMonitorResourceProperties> {}

model SubAccountNameParameter {
  @doc("Sub account name")
  @path subAccountName: string;
}

@armResourceOperations(SubAccountResource)
namespace SubAccounts {
  @patch
  @doc("Update a monitor resource.")
  op patch(
      ...CommonResourceParameters, 
      @doc("The name of the monitor resource.")
      @path monitorName: string, 
      @doc("The name of the subAccount resource.")
      @path subAccountName: string,
      @doc("Details of the updates to the monitor resource.") 
      @body rule: LogzMonitorResource): ArmResponse<LogzMonitorResource> | ArmCreatedResponse<LogzMonitorResource> | ErrorResponse;
}

@armListBy(SubAccountNameParameter, "List")
@armResource({
    path: "tagRules",
    collectionName: "SubAccountTagRules",
    parameterType: TagNameParameter,
    parentResourceType: SubAccountResource,
    standardOperations: ["read", "create", "delete"]
})
@doc("Details of a SubAccount TagRule.")
model SubAccountTagRuleResource is ProxyResource<{}> {};
