import "../dist/arm.js";

@doc("Common properties for all ARM resources.")
model ArmResource {
  @visibility("read")
  id: string;

  @visibility("read")
  name: string; 

  @visibility("read")
  type: string;
}

@armCommonDefinition("TrackedResource")
@doc("The resource model definition for an Azure Resource Manager tracked top level resource")
model TrackedResourceBase extends ArmResource {
  @doc("The geo-location where the resource lives")
  @visibility("read", "create")
  location: string;

  @doc("Resource tags.")
  @visibility("read", "write", "create")
  tags?: Map<string, string>;
}

@doc("Concrete tracked resource types can be created by aliasing this type using a specific property type.")
model TrackedResource<TProperties> extends TrackedResourceBase {
  @doc("The resource-specific properties for this resource.")
  @visibility("read", "create")
  @extension("x-ms-client-flatten", true)
  properties: TProperties;

  @doc("System metadata for this resource.")
  @visibility("read")
  systemData?: SystemData;
}

@armCommonDefinition("ProxyResource")
model ProxyResourceBase {
  ...ArmResource,

  @doc("System metadata for this resource.")
  @visibility("read")
  systemData?: SystemData;
};

@doc("Concrete proxy resource types can be created by aliasing this type using a specific property type.")
model ProxyResource<TProperties> extends ProxyResourceBase {
  @doc("The resource-specific properties for this resource.")
  @visibility("read", "create")
  @extension("x-ms-client-flatten", true)
  properties: TProperties;
}

model ExtensionResource<TProperties> extends ArmResource {
  @doc("The resource-specific properties for this resource.")
  @visibility("read", "create")
  @extension("x-ms-client-flatten", true)
  properties: TProperties;

  @doc("System metadata for this resource.")
  @visibility("read")
  systemData?: SystemData;
}

@doc("The default name parameter type")
model NameParameter {
  @doc("The name of the resource")
  @path name: string;
}

@doc("Response envelope for ARM operations.")
model ArmResponseBase {
  @header("x-ms-client-request-id")
  clientRequestId: string;

  @header("x-ms-correlation-request-id")
  correlationRequestId: string;
}

@doc("Typed response envelope for ARM operations.")
model ArmResponse<T> {
  ... OkResponse<T>;
  ... ArmResponseBase;
}

@doc("Typed response envelope for ARM PUT operations.")
model ArmCreatedResponse<T> {
  ... CreatedResponse;
  ... ArmResponseBase;
  @body body: T;
}

@doc("Paged response")
model Page<T> {
  @doc("The items on this page")
  value: T[];

  @doc("The link to the next page of items")
  nextLink: string;
}

model ApiVersionParameter {
  @query
  @minLength(1)
  @doc("The API version to use for this operation.")
  @armCommonParameter("ApiVersionParameter")
  "api-version": string;
}

model SubscriptionIdParameter {
  @path
  @minLength(1)
  @doc("The ID of the target subscription.")
  @armCommonParameter("SubscriptionIdParameter")
  subscriptionId: string;
}

model ResourceGroupNameParameter {
  @path
  @minLength(1)
  @maxLength(90)
  @format("^[-\\w\\._\\(\\)]+$")
  @doc("The name of the resource group. The name is case insensitive.")
  @armCommonParameter("ResourceGroupNameParameter")
  resourceGroupName: string;
}

model ResourceUriParameter {
  @doc("The fully qualified Azure Resource manager identifier of the resource.")
  @extension("x-ms-skip-url-encoding", true)
  @path resourceUri: string;
}

model OperationIdParameter {
  @path
  @minLength(1)
  @doc("The ID of an ongoing async operation.")
  @armCommonParameter("OperationIdParameter")
  operationId: string;
}

model CommonResourceParameters {
  ...ApiVersionParameter,
  ...SubscriptionIdParameter,
  ...ResourceGroupNameParameter
}

@armCommonDefinition
@doc("Details of a REST API operation, returned from the Resource Provider Operations API")
model Operation {
  @doc("""
  The name of the operation, as per Resource-Based Access Control (RBAC). Examples: "Microsoft.Compute/virtualMachines/write", "Microsoft.Compute/virtualMachines/capture/action"
  """)
  @visibility("read")
  name?: string;

  @doc("""
  Whether the operation applies to data-plane. This is "true" for data-plane operations and "false" for ARM/control-plane operations.
  """)
  @visibility("read")
  isDataAction?: boolean;

  @doc("Localized display information for this particular operation.")
  display?: OperationDisplay;

  @doc("""
  The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
  """)
  @visibility("read")
  origin?: Origin;

  @doc("""
  Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
  """)
  actionType?: ActionType;
}

@doc("""
The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is "user,system"
""")
model Origin = "user" | "system" | "user,system";

@doc("""
Enum. Indicates the action type. "Internal" refers to actions that are for internal only APIs.
""")
model ActionType = "Internal";

@armCommonDefinition
@doc("""
A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.
""")
model OperationListResult = Page<Operation>;

@armCommonDefinition
@doc("Localized display information for and operation.")
model OperationDisplay {
  @doc("""
  The localized friendly form of the resource provider name, e.g. "Microsoft Monitoring Insights" or "Microsoft Compute".
  """)
  provider?: string;

  @doc("""
  The localized friendly name of the resource type related to this operation. E.g. "Virtual Machines" or "Job Schedule Collections".
  """)
  resource?: string;

  @doc("""
  The concise, localized friendly name for the operation; suitable for dropdowns. E.g. "Create or Update Virtual Machine", "Restart Virtual Machine".
  """)
  operation?: string;

  @doc("The short, localized friendly description of the operation; suitable for tool tips and detailed views.")
  description?: string;
}

@armCommonDefinition
@doc("The current status of an async operation.")
model OperationStatusResult {
  @doc("Fully qualified ID for the async operation.")
  id?: string;

  @doc("Name of the async operation.")
  name?: string;

  @doc("Operation status.")
  status: string;

  @doc("Percent of the operation that is complete.")
  @minValue(0)
  @maxValue(100)
  percentComplete?: int32;

  @doc("The start time of the operation.")
  startTime?: zonedDateTime;

  @doc("The end time of the operation.")
  endTime?: zonedDateTime;

  @doc("The operations list.")
  operations: OperationStatusResult[];

  @doc("If present, details of the operation error.")
  error?: ErrorDetail;
}

@armCommonDefinition
@doc("Common error response for all Azure Resource Manager APIs to return error details for failed operations.")
model ErrorResponse {
  @doc("The error object.")
  error?: ErrorDetail;
}

@armCommonDefinition
@doc("The error detail.")
model ErrorDetail {
  @doc("The error code.")
  @visibility("read")
  code?: string;

  @doc("The error message.")
  @visibility("read")
  message?: string;

  @doc("The error target.")
  @visibility("read")
  target?: string;

  @doc("The error details.")
  @visibility("read")
  details?: ErrorDetail[];

  @doc("The error additional info.")
  @visibility("read")
  additionalInfo?: ErrorAdditionalInfo[];
}

@armCommonDefinition
@doc("The resource management error additional info.")
model ErrorAdditionalInfo {
  @doc("The additional info type.")
  @visibility("read")
  type?: string;

  @doc("The additional info.")
  @visibility("read")
  info?: {};
}

// NOTE: This is how the enum is named in types.json
model createdByType = "User" | "Application" | "ManagedIdentity" | "Key";

@armCommonDefinition("systemData")
@doc("Metadata pertaining to creation and last modification of the resource.")
model SystemData {
  @visibility("read")
  @doc("The identity that created the resource.")
  createdBy?: string;

  @visibility("read")
  @doc("The type of identity that created the resource.")
  createdByType?: createdByType;

  @visibility("read")
  @doc("The type of identity that created the resource.")
  createdAt?: plainDate;

  @visibility("read")
  @doc("The identity that last modified the resource.")
  lastModifiedBy?: string;

  @visibility("read")
  @doc("The type of identity that last modified the resource.")
  lastModifiedByType?: createdByType;

  @visibility("read")
  @doc("The timestamp of resource last modification (UTC)")
  lastModifiedAt?: plainDate;
}
