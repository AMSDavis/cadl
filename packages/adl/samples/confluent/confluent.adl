@TrackedResource("Microsoft.Confluent/organizations", OrganizationProperties)
interface Organization {
  @post getKeys(@path subscriptionId: string, @path resourceGroup: string, @path name: string) : ArmResponse<OrganizationKeys>;
}

@doc("Details of the Confluent organization.")
model OrganizationProperties {
  @doc("UTC Time when Organization resource was created.")
  // @visibility('read') 
  createdTime: date;

  @doc("Id of the Confluent organization.")
  // @visibility('read') 
  organizationId: string;

  @doc("Single sign-on url for the Confluent organization.")
  // @visibility('read') 
  ssoUrl: Uri;

  @doc("Details of the product offering.")
  offerDetail: OfferDetail;

  @doc("Subscriber details.")
  userDetail: UserDetail;
}

// @doc("Details of the Confluent organization (read only properties)")
// @withVisibility("read")
// model OrganizationReadProperties {
// }

@doc("Details of the product offering.")
model OfferDetail {
  @doc("Id of the product publisher.")
  publisherId: string50;

  @doc("Id of the product offering.")
  id: string50;

  @doc("Id of the product offer plan.")
  planId: string50;

  @doc("Name of the product offer plan.")
  planName: string50;

  @doc("Offer plan term unit.")
  termUnit: string25;
  
  @doc("SaaS offer status.")
  status: 'Started' | 'PendingFulfillmentStart' | 'InProgress' |
          'Subscribed' | 'Suspended' | 'Reinstated' | 'Succeeded' |
          'Failed' | 'Unsubscribed' | 'Updating';
}

@doc("Details of the subscriber")
model UserDetail {
  @doc("Subscriber first name.")
  firstName: string50;

  @doc("Subscriber last name.")
  lastName: string50;

  @doc("Subscriber email address.")
  emailAddress: email
}

model OrganizationKeys {
  @doc("The primary key.")
  primary: OrganizationKey;

  @doc("The secondary Key.")
  secondary: OrganizationKey;
}

@doc("A string that represents a URI.")
model Uri = string;

@doc("Reusable representation of an email address")
@format("\\w+@\\w+\\.\\w+")
model email = string;

@doc('Shorthand for setting length limit.')
@minLength(5)
@maxLength(50)
model string50 = string;

@doc("Shorthand for setting length limit.")
@maxLength(25)
model string25 = string;

@doc("An Organization key to be handled as a secret.")
@secret
model OrganizationKey = string;
